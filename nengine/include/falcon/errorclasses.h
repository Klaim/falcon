/*
   FALCON - The Falcon Programming Language.
   FILE: errorclasses.h

   All the Class handling errors generated by the engine.
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: Sun, 31 Jul 2011 15:30:08 +0200

   -------------------------------------------------------------------
   (C) Copyright 2011: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/

#ifndef _FALCON_ERRORCLASSES_H_
#define _FALCON_ERRORCLASSES_H_

#include <falcon/errorclass.h>

namespace Falcon {

/** Class handler for AccessError exceptions. 
 */
class AccessErrorClass: public ErrorClass
{
public:
   AccessErrorClass():
      ErrorClass("AccessError")
   {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};

/** Class handler for AccessTypeError exceptions. 
 */
class AccessTypeErrorClass: public ErrorClass
{
public:
   AccessTypeErrorClass():
      ErrorClass("AccessTypeError")
   {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};

/** Class handler for CodeError exceptions. 
 */
class CodeErrorClass: public ErrorClass
{
public:
   CodeErrorClass():
      ErrorClass("CodeError")
   {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


/** Class handler for GenericError exceptions. 
 */
class GenericErrorClass: public ErrorClass
{
public:
   GenericErrorClass():
      ErrorClass( "GenericError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


/** Class handler for InterruptedError exceptions. 
 */
class InterruptedErrorClass: public ErrorClass
{
public:
   InterruptedErrorClass():
      ErrorClass( "InterruptedError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


/** Class handler for IOError exceptions. 
 */
class IOErrorClass: public ErrorClass
{
public:
   IOErrorClass():
      ErrorClass( "IOError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};

/** Class handler for LinkError exceptions. 
 */
class LinkErrorClass: public ErrorClass
{
public:
   LinkErrorClass():
      ErrorClass( "LinkError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


/** Class handler for OperandError exceptions. 
 */
class OperandErrorClass: public ErrorClass
{
public:
   OperandErrorClass():
      ErrorClass( "OperandError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};

/** Class handler for UnsupportedError exceptions. 
 */
class UnsupportedErrorClass: public ErrorClass
{
public:
   UnsupportedErrorClass():
      ErrorClass( "UnsupportedError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};

/** Class handler for EncodingError exceptions. 
 */
class EncodingErrorClass: public ErrorClass
{
public:
   EncodingErrorClass():
      ErrorClass( "EncodingError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


/** Class handler for SyntaxError exceptions. 
 */
class SyntaxErrorClass: public ErrorClass
{
public:
   SyntaxErrorClass():
      ErrorClass( "SyntaxError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


/** Class handler for ParamError exceptions. 
 */
class ParamErrorClass: public ErrorClass
{
public:
   ParamErrorClass():
      ErrorClass( "ParamError" )
      {}
      
   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


}

#endif	/* _FALCON_ERRORCLASSES_H_ */

/* end of errorclasses.h */
