/*
   FALCON - The Falcon Programming Language.
   FILE: errorclasses.h

   All the Class handling errors generated by the engine.
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: Sun, 31 Jul 2011 15:30:08 +0200

   -------------------------------------------------------------------
   (C) Copyright 2011: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/

#ifndef _FALCON_ERRORCLASSES_H_
#define _FALCON_ERRORCLASSES_H_

#include <falcon/classerror.h>

namespace Falcon {

/** Class handler for AccessError exceptions. 
 */
class ClassAccessError: public ClassError
{
public:
   ClassAccessError():
      ClassError("AccessError")
   {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};

/** Class handler for AccessTypeError exceptions. 
 */
class ClassAccessTypeError: public ClassError
{
public:
   ClassAccessTypeError():
      ClassError("AccessTypeError")
   {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};

/** Class handler for CodeError exceptions. 
 */
class ClassCodeError: public ClassError
{
public:
   ClassCodeError():
      ClassError("CodeError")
   {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


/** Class handler for GenericError exceptions. 
 */
class ClassGenericError: public ClassError
{
public:
   ClassGenericError():
      ClassError( "GenericError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


/** Class handler for InterruptedError exceptions. 
 */
class ClassInterruptedError: public ClassError
{
public:
   ClassInterruptedError():
      ClassError( "InterruptedError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


/** Class handler for IOError exceptions. 
 */
class ClassIOError: public ClassError
{
public:
   ClassIOError():
      ClassError( "IOError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};

/** Class handler for LinkError exceptions. 
 */
class ClassLinkError: public ClassError
{
public:
   ClassLinkError():
      ClassError( "LinkError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


/** Class handler for OperandError exceptions. 
 */
class ClassOperandError: public ClassError
{
public:
   ClassOperandError():
      ClassError( "OperandError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};

/** Class handler for UnsupportedError exceptions. 
 */
class ClassUnsupportedError: public ClassError
{
public:
   ClassUnsupportedError():
      ClassError( "UnsupportedError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};

/** Class handler for EncodingError exceptions. 
 */
class ClassEncodingError: public ClassError
{
public:
   ClassEncodingError():
      ClassError( "EncodingError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


/** Class handler for SyntaxError exceptions. 
 */
class ClassSyntaxError: public ClassError
{
public:
   ClassSyntaxError():
      ClassError( "SyntaxError" )
      {}

   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


/** Class handler for ParamError exceptions. 
 */
class ClassParamError: public ClassError
{
public:
   ClassParamError():
      ClassError( "ParamError" )
      {}
      
   virtual void op_create( VMContext* ctx, int32 pcount ) const;
};


}

#endif	/* _FALCON_ERRORCLASSES_H_ */

/* end of errorclasses.h */
