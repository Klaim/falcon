/*
   FALCON - The Falcon Programming Language.
   FILE: exprtree.h

   Non-syntactic expression holding evaluable code units.
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: Sat, 19 Jan 2013 20:24:02 +0100

   -------------------------------------------------------------------
   (C) Copyright 2013: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/

#ifndef _FALCON_EXPRTREE_H_
#define _FALCON_EXPRTREE_H_

#include <falcon/setup.h>
#include <falcon/expression.h>

namespace Falcon {

class VarMap;
class Variable;

/** Non-syntactic expression holding evaluable code units.

 Tree expressions are generated by literal expressions when they
 are syntactically found in the code. They provide a local
 evaluation environment for the code they hold.

 */
class ExprTree: public Expression
{
public:
   ExprTree( int line=0, int chr=0 );
   ExprTree( TreeStep* child, int line=0, int chr=0 );
   ExprTree( const ExprTree& other );

   virtual ~ExprTree();
   virtual void render( TextWriter* tw, int32 depth ) const;

   virtual Expression* clone() const { return new ExprTree(*this); }
   inline virtual bool isStandAlone() const { return true; }
   virtual bool isStatic() const {return false; }
   virtual bool simplify( Item& ) const { return false; }

   void setChild( TreeStep* st );

   /**
    Adds a parameter to this parametric  expression.
    */
   Variable* addParam( const String& name );
   Variable* addLocal( const String& name );

   /**
    Retrns the count of parameters.
    */
   int paramCount() const;

   /**
    Gets the nth parameter.
    */
   const String& param( int n );

   /** Return the child attached to this literal.
    */
   TreeStep* child() const { return m_child; }

   virtual int32 arity() const;
   virtual TreeStep* nth( int32 n ) const;
   virtual bool setNth( int32 n, TreeStep* ts );

   /** Returns the variable map associated with this tree expression */
   VarMap* varmap() const { return m_varmap; }
   void setVarMap( VarMap* );

private:
   TreeStep* m_child;
   VarMap* m_varmap;
   static void apply_( const PStep*, VMContext* ctx );
};

}

#endif   /* _FALCON_EXPRTREE_H_ */

/* end of exprtree.h */
