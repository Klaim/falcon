#############################################################################
# The Falcon Programming language
#
# CMake configuration file for Core falcon
##############################################################################
#
#
# List of available modules: CURL DBI DBUS DYNLIB GD2 GTK PDF SDL
#

##################################################################
# CMake system setup and initialization

cmake_minimum_required(VERSION 2.6.2)
project(Falcon)

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules" )
include(cmake/system-detect.cmake)
include(cmake/utils.cmake)

##################################################################
# System specific

include(cmake/sys_setup-win32.cmake)
include(cmake/sys_setup-win32.cmake)
include(cmake/test-bigendian.cmake)

##################################################################
# Read Options and determine defaults

include(cmake/options.cmake)

##################################################################
#  Compiler control

include(cmake/compilers.cmake)

##################################################################
# Falcon build environment setup

# Add source include files at those generated by the module
set(Falcon_IN_CORE_SOURCETREE on)

set(Falcon_DIR "${CMAKE_CURRENT_BINARY_DIR}/devtools" )

list(APPEND Falcon_INCLUDE_DIRS
   "${CMAKE_CURRENT_SOURCE_DIR}/include"
   "${CMAKE_CURRENT_SOURCE_DIR}/modules/native/feathers/include"
)

# for install(TARGETS .. ${FALCON_INSTALL_DESTINATIONS})
set(FALCON_INSTALL_DESTINATIONS
  RUNTIME DESTINATION ${FALCON_BIN_DIR}
  LIBRARY DESTINATION ${FALCON_LIB_DIR}
  ARCHIVE DESTINATION ${FALCON_LIB_DIR}
)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${FALCON_BIN_DIR}" CACHE INTERNAL 
  "Where to put the executables"
)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${FALCON_LIB_DIR}" 
  CACHE INTERNAL "Where to put the libraries"
)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/${FALCON_LIB_DIR}" CACHE INTERNAL 
  "Where to put the archives"
)

include_directories( include )

#########################################################à
# Things to do at main level
#

# Set of OSI/GNU-compliant documentation
include( cmake/install-gnudocs.cmake )


#########################################################à
# Subdirectories
#

#collect the include files in FALCON_HEADER
add_subdirectory(include)
add_subdirectory(clt)
add_subdirectory(engine)

#add_subdirectory(devtools)
#add_custom_target(falcon-core)

#########################################################################
# Feathers?
#
if( FALCON_BUILD_FEATHERS )
   message( STATUS "Adding FEATHERS to this build" )

   #override settings for the include dirs
   list( APPEND Falcon_INCLUDE_DIRS
      "${CMAKE_CURRENT_BINARY_DIR}/include" )

   add_subdirectory( modules/native/feathers )

else()
    message( STATUS "Not building feathers" )
endif()



#########################################################################
# Modules?
#
if( FALCON_BUILD_NATMODS )
    message( STATUS "Adding native binary modules to this build" )
    add_subdirectory( modules/native )
else()
    message( STATUS "Not building binary native modules" )
endif()

if( FALCON_BUILD_MODULES )
    message( STATUS "Adding Falcon modules to this build" )
    add_subdirectory( modules/falcon )
else()
    message( STATUS "Not building modules" )
endif()

if( FALCON_BUILD_FWKS )
    message( STATUS "Adding frameworks to this build" )
    add_subdirectory( frameworks )
else()
    message( STATUS "Not building frameworks" )
endif()

if( FALCON_BUILD_APPS )
    message( STATUS "Adding applications to this build" )
    add_subdirectory( apps )
else()
    message( STATUS "Not building applications" )
endif()

if( FALCON_BUILD_DOCS )
    message( STATUS "Adding documentation to this build" )
    add_subdirectory( docs )
else()
    message( STATUS "Not building documentation" )
endif()

#Generate make distro scripts
if( FALCON_BUILD_DIST )
	add_subdirectory( dist )
endif()

if( FALCON_BUILD_BINTESTS )
    message( STATUS "Building embedding binary tests" )
    add_subdirectory( tests/bin )
endif()

if( FALCON_INSTALL_TESTS )
    message( STATUS "Adding (source) tests, samples and demos to the distribution" )
else()
    message( STATUS "Not installing tests" )
endif()

# CMake generated information.  Is used by our falcon-config.cmake
if (NOT FALCON_CMAKE_DIR)
   if(WIN32)
      set(FALCON_CMAKE_DIR cmake)
   else()
      set(FALCON_CMAKE_DIR ${FALCON_SHARE_DIR}/cmake)
   endif()
endif()

install(EXPORT falcon-core-targets
  DESTINATION ${FALCON_CMAKE_DIR}
)

