
                         RELEASE NOTES for Falcon

                            Crane-RC2 Release

                                0.9.1.8

  Version 0.9.1.8 is the second release candidate for final public 0.9.2.
This version is intended for all developers and wilful users to test
and squeeze the last bugs that we weren't able to find out. It's supposed
to be pretty stable, with all the blockesrs for final 0.9.2 gone.

  "Crane" marks the birth of the new development effort towards the final
1.0 release. This development release is meant as a pre-release for developers,
willful users, and module designers so that they can install it on their
systems and test it, use it and develop the new modules on it. In short, it's
a stabilization of the 0.9 branch, which is released as a package so that
the surrounding modules and applications can be developed and tested.

  While Albatross (0.9.0) was a totally experimental version, this release is
already usable, and has already been employed to port relevant applications and
embeddings from version 0.8. While still not "official", and still bearing
some known issues, it is usable enough to drive Falcon official site and
run through our set of applications without any particular problems.

Short term plans
================

  As planned, we're releasing 0.9.2 (the first official version) in 30-45
days from 0.9.0; this is an in-between version which we decided to release
as a package to simplify the effort of developers moving to the 0.9 branch.

Usage tips
==========

   Although the new Garbage Collector is relatively efficient in determining
the actual needs of applications and in reclaiming
unused memory, the detection algorithm is still rudimentary and experimental.
If your application is memory-intensive, be sure to read the Core Module
Documentation about the new GC object, which provides four default collection
strategies and also allows you to implement your own. A finely tuned GC 
strategy can boost the performance of your application and reduce its memory 
footprint.

  Meanwhile we'll continue to work towards finding collection strategies 
applicable to the most common usage patterns and you're invited to provide 
your own, should this aspect of Falcon be critical to your application.

