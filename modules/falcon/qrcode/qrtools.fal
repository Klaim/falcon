/*#
 * @file        qrtools.fal
 * @brief       Utilities.
 * @begin       07-Oct-2010
 * @author      <a href="mailto:giuseppe.greco@agamura.com">Giuseppe Greco</a>
 *
 * @copyright   (C) 2010 href="http://www.falconpl.org">The Falcon Programming Language</a>
 * @legalnotice Released under FPLL 1.1 or GPL 2.0 at your choice.
 */

import QrConfig from .qrconfig as QrConfig
import QrImage from .qrimage as QrImage
import QrMask from .qrmask as QrMask
import QrSpec from .qrspec as QrSpec
import QrSpecConst from .qrspec as QrSpecConst

class QrTools
    function binarize(frame)
        frameLen = len(frame)
        for line in frame
            for i in [0:frameLen]
                line[i] = (line[*i] && 1) ? '1' : '0'
            end
        end

        return frame
    end

    function buildCache()
        mask = QrMask()
        spec = QrSpec()

        for a in [1:QrSpecConst.max_version + 1]
            frame = spec.newFrame(a)
            fileName = QrConfig.cache_dir + 'frame_' + a + '.png'
            QrImage.png(self.binarize(frame), fileName, 1, 0)
            
            width = len(frame)
            bitMask = arrayBuffer(width)
            for i in [0:width]
                bitMask[i] = arrayBuffer(width, 0)
            end

            for maskNo in [0:8]
                mask.makeMaskNo(maskNo, width, frame, $bitMask, true)
            end
        end
    end

    function dumpMask(frame) 
        width = len(frame)

        for y in [0:width]
            for x in [0:width]
                > frame[y][*x] + ','
            end
        end
    end
end

export QrTools
