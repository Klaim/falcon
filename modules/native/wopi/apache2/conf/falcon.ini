########################################
#   The Falcon Programming Language.   #
#    mod_faldoc configuration file     #
########################################

# Type of error signaling
# Can be:
#  "Silent" - Nothing signaled.
#  "Log" - Nothing signaled on remote end, error logged.
#  "Kind" - Log and minimal informations on remote end.
#  "Report" - Send error backtrace to log and remote.

LogErrors = Kind     # Kind signaling.

#################################################################
# UPLOAD CONTROL
#################################################################

# Maximum upload size (in KB)
MaxUpload = 1000

# MaxMemUpload. 
#
# Maximum size of uploads to be stored in memory buffers (in KB)
#
# Set the maximum size allowed for storage of uploaded files
# in memory. Set to 0 to always store files on disk.
#
MaxMemUpload = 10

# Upload temporary directory.
# Used also for other temporary files.

UploadDir = /tmp

##################################################################
# Default load path
# If not given or empty, the system path will be used instead.
#
# LoadPath=.;/usr/lib/falcon

##################################################################
# Handler for SetHandler "falcon-prgoram"
# Tells what script should be loaded to parse generic requests.
# If not absolute, is searched in LoadPath
#
# FalconHandler = handler.fal


##################################################################
# Session mode.
#
# File - use temporary files to store the session data (default).
# Memory - Use only memory-based sessions. May act weird in 
#          multi-process apache, use only if you have 1 serving
#          process.
# SessionMode = File

##################################################################
# Session timeout
# Determine the timeout for session data. If a session is not
# refreshed in <timeout> seconds, it will be discarded.
#
# The default is 600 seconds (5 minutes)
#
# SessionTimeout = 600

##################################################################
# Cache modules
# Never reload from disk a module if we have already it.
#
# CacheModules = on
