/*
   FALCON - The Falcon Programming Language.
   FILE: errors.h

   Errors for interprocess shared-memory object.
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: Sat, 24 Apr 2010 12:12:10 +0200

   -------------------------------------------------------------------
   (C) Copyright 2013: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/



#ifndef _FALCON_FEATHERS_SHMEM_ERRORS_H_
#define _FALCON_FEATHERS_SHMEM_ERRORS_H_

#include <falcon/setup.h>
#include <falcon/error.h>
#include <falcon/error_base.h>

#ifndef FALCON_SHMEM_ERROR_BASE
#define FALCON_SHMEM_ERROR_BASE           1240
#endif

#define FALCON_ERROR_SHMEM_ALREADY_INIT   (FALCON_SHMEM_ERROR_BASE + 0 )
#define FALCON_ERROR_SHMEM_NOT_INIT       (FALCON_SHMEM_ERROR_BASE + 1 )
#define FALCON_ERROR_SHMEM_IO_WRITE       (FALCON_SHMEM_ERROR_BASE + 2 )
#define FALCON_ERROR_SHMEM_IO_READ        (FALCON_SHMEM_ERROR_BASE + 3 )
#define FALCON_ERROR_SHMEM_IO_INIT        (FALCON_SHMEM_ERROR_BASE + 4 )
#define FALCON_ERROR_SHMEM_POST           (FALCON_SHMEM_ERROR_BASE + 5 )
#define FALCON_ERROR_SHMEM_WAIT           (FALCON_SHMEM_ERROR_BASE + 6 )

#define FALCON_ERROR_SHMEM_SESSION_CONCURRENT  (FALCON_SHMEM_ERROR_BASE + 7 )
#define FALCON_ERROR_SHMEM_SESSION_EXPIRED     (FALCON_SHMEM_ERROR_BASE + 8 )
#define FALCON_ERROR_SHMEM_SESSION_INVALID     (FALCON_SHMEM_ERROR_BASE + 9 )


namespace Falcon {
/*#
   @class ShmemError
   @brief Error generated by the shmem module in case of failures.
   @optparam code A numeric error code.
   @optparam description A textual description of the error code.
   @optparam extra A descriptive message explaining the error conditions.
   @from Error code, description, extra

   Possible error codes are:
   - ShmemError.AlreadyInit - Object initialized multiple times.
   - ShmemError.NotInit - Object used but not initialized.
   - ShmemError.IoWrite - Error while storing the object on shared memory.
   - ShmemError.IoRead - Error while restoring the object from shared memory.
   - ShmemError.IoInit - Error while creating the shared memory object.
   - ShmemError.Post - Error while posting to a shared semaphore.
   - ShmemError.Wait - Error while waiting for a shared semaphore.
*/
FALCON_DECLARE_ERROR_INSTANCE_WITH_DESC( ShmemError,
         FALCON_ERROR_CLASS_DESC( FALCON_ERROR_SHMEM_ALREADY_INIT, "Object initialized multiple times" )
         FALCON_ERROR_CLASS_DESC( FALCON_ERROR_SHMEM_NOT_INIT, "Object used but not initialized" )
         FALCON_ERROR_CLASS_DESC( FALCON_ERROR_SHMEM_IO_WRITE, "Error while storing the object on shared memory" )
         FALCON_ERROR_CLASS_DESC( FALCON_ERROR_SHMEM_IO_READ, "Error while restoring the object from shared memory" )
         FALCON_ERROR_CLASS_DESC( FALCON_ERROR_SHMEM_IO_INIT, "Error while creating the shared memory object" )
         FALCON_ERROR_CLASS_DESC( FALCON_ERROR_SHMEM_POST, "Error while posting to a shared semaphore" )
         FALCON_ERROR_CLASS_DESC( FALCON_ERROR_SHMEM_WAIT, "Error while waiting for a shared semaphore" )
);
FALCON_DECLARE_ERROR_CLASS_EX( ShmemError, \
         addConstant("AlreadyInit", FALCON_ERROR_SHMEM_ALREADY_INIT );\
         addConstant("NotInit", FALCON_ERROR_SHMEM_NOT_INIT);\
         addConstant("IoWrite", FALCON_ERROR_SHMEM_IO_WRITE);\
         addConstant("IoRead", FALCON_ERROR_SHMEM_IO_READ);\
         addConstant("IoInit", FALCON_ERROR_SHMEM_IO_INIT);\
         addConstant("Post", FALCON_ERROR_SHMEM_POST);\
         addConstant("WAit", FALCON_ERROR_SHMEM_WAIT);\
         )

/*#
   @class SessionError
   @brief Error generated by the shmem module in case of failures in session object handling.
   @optparam code A numeric error code.
   @optparam description A textual description of the error code.
   @optparam extra A descriptive message explaining the error conditions.
   @from Error code, description, extra

   Possible error codes are:
   - SessionError.Concurrent - Concurrent access to session storage
   - SessionError.Expired - Tried to start an expired session
*/
FALCON_DECLARE_ERROR_INSTANCE_WITH_DESC( SessionError,
         FALCON_ERROR_CLASS_DESC( FALCON_ERROR_SHMEM_SESSION_CONCURRENT, "Concurrent access to session storage" )\
         FALCON_ERROR_CLASS_DESC( FALCON_ERROR_SHMEM_SESSION_EXPIRED, "Session expired" )\
         FALCON_ERROR_CLASS_DESC( FALCON_ERROR_SHMEM_SESSION_INVALID, "Invalid session file" )\
);
FALCON_DECLARE_ERROR_CLASS_EX( SessionError, \
         addConstant("Concurrent", FALCON_ERROR_SHMEM_SESSION_CONCURRENT );\
         addConstant("Expired", FALCON_ERROR_SHMEM_SESSION_EXPIRED );\
         addConstant("Invalid", FALCON_ERROR_SHMEM_SESSION_INVALID );\
         )
}

#endif /* _FALCON_FEATHERS_SHMEM_ERRORS_H_ */

/* end of errors.h */
