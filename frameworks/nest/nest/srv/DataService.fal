/*
   FALCON - The Falcon Programming Language

   Nest - Falcon web applcation engine

   FILE: DataQuery/main.fal

   Query an entity and its fields.
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: Mon, 09 Aug 2010 14:45:44 +0200

   -------------------------------------------------------------------
   (C) Copyright 2010: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/

import Service from nest as Service
import ServiceVar from nest as ServiceVar
import NestError from nest as NestError
import from nest.bindings in b
import DBView from nest.dbview as DBView

/*# Base class for services related to data management.

   Services must be configured indicating the name of the data manager they
   use, and a view.

   This class MUST be configured with a **view** configuration variable,
   that represents the entity on which this service should operate and the
   view through which the entity must be accessed.

   As views are nameless, they must be created directly in the configuration
   file (or in the configuration dictionary), and are tighly coupled with
   the service they refer to.
*/ 
class DataService( instance ) from Service( instance )

   /*# Manager of the table actions (submits and other table-level actions). */
   handler = ServiceVar( "Manager of the table actions", b.ConfigBinder  )

   /*# A DBView instance used to access the desired entity */
   view = ServiceVar( "A DBView instance used to access the desired entity", b.ConfigBinder  )

   
   function startup()
      view = self.view.value
      if not view.derivedFrom( DBView )
         raise NestError( NestError.other, i"View not specified in configuration." )
      end
   end
      
   function run()
      if not self.checkAllowed(): return
      self.do_query()
   end

   function do_query()
      raise "Please implement this method"
   end

end
