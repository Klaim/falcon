/*
   FALCON - The Falcon Programming Language

   Nest - Falcon web applcation engine

   FILE: utils.fal

   File with general utils
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: Tue, 29 Jun 2010 16:52:46 +0200

   -------------------------------------------------------------------
   (C) Copyright 2010: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/


function findFile( dir, rname, exts )
   // search under dir for the file or the file + some of the exts.
   fname = dir + "/" + rname
   fpath = Path(fname)

   for ext in exts 
      fpath.extension = ext
      if fileType( fpath.path ) == FileStat.NORMAL
         return fpath.path
      end
   end
   
   // no luck with the extension. Have we the file as-is?
   if fileType( fname ) == FileStat.NORMAL
      return fname
   end
   
   // no luck at all
   return nil
end


function findFileInDirs( locations, name, exts )
   for loc in locations
      if ( f = findFile( loc, name, exts ) )
         return f
      end
   end
end


function reldir( parent, child )
   if child.startsWith( "/" )
      return child
   end
   
   if not parent.endsWith("/"): parent += "/"
   return parent + child
end

/*# Site setup.
   @param tgtdir Target directory where to create the site.

   This function sets up a standard nest site, creating the following
   standard file or directories:
   
   @code
      site/
      site/index.fal
      site/res
      nest/pages
      nest/pages/home.fal
      nest/srv
   @endcode

   Files in res will be copied from system Nest resource directory, and
   contain useful javascripts, images, etc.

   @note Existing files won't be overwritten. Delete them if you want
   to update them to new versions.
*/

function makeSite( tgtdir )
   if not tgtdir
      tgtdir = "./"
   else
      if not tgtdir.endsWith("/"): tgtdir += "/"
   end

   dirMake( tgtdir, true )
   dirMake( tgtdir + "site", true )
   dirMake( tgtdir + "site/res", true )
   dirMake( tgtdir + "nest", true )
   dirMake( tgtdir + "nest/pages", true )
   dirMake( tgtdir + "nest/srv", true )

   if fileType( tgtdir + "/site/index.fal" ) == FileStat.NOTFOUND
      index = OutputStream( tgtdir + "/site/index.fal" )

      index.writeText( @'
/* Nest default site, index */
load nest
Nest.site_nest_dir = "../nest"

// Uncomment to have debug infos.
//Nest.debug = true
//Nest.log_level = 3

// Stylesheet
// Nest.stylesheets += "some_style.css"

// Scripts
Nest.extscripts += "res/json2.js"
Nest.extscripts += "res/nest.js"

Nest.auth_level = Nest.AL.NONE
// framing functions
// Nest.frame = .[include "jinkey_frame.ftd" ]

/*
Nest.onStartup = function()
   // Login and language are usually checked here or in the frame.
end
*/

// We can start processing Nest request
Nest.route()
         ' )
      index.close()
   end

   if fileType( tgtdir + "/nest/pages/home.ftd" ) == FileStat.NOTFOUND
      home = OutputStream( tgtdir + "/nest/pages/home.ftd" )
      home.writeText( "<h1>Hello world!</h1>\n" )
      home.close()
   end

   modPath = Path( vmModulePath() )
   srcdir = modPath.fulloc + "/res/"
   resdir = Directory( srcdir )
   while (entry = resdir.read())
      if not entry.startsWith( "." ) and \
             fileType( tgtdir + "site/res/" + entry ) == FileStat.NOTFOUND
             
         fileCopy( srcdir + "/" + entry, tgtdir + "site/res/" + entry )
      end
   end

end
