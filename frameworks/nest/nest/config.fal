/*
   FALCON - The Falcon Programming Language

   Nest - Falcon web applcation engine

   FILE: config.fal

   Master configuration structure for Nest.
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: Sat, 26 Jun 2010 14:21:48 +0200

   -------------------------------------------------------------------
   (C) Copyright 2010: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/

import NestError from .error as NestError


/*# Sample configuration */

object Config
   /*# Nest application entry point on the web side.
      If nil, will autodetect.
   */
   self_uri = nil

   /*# Home of the site, in the local system.
      Relative to the index.fal script
   */
   homedir = "."

   /*# Home of the nest system. 
   
      If nil, Nest will fill it with nest module vmModulePath().
   */
   nestdir = nil
   
   /*# Directory where pages are stored on the site.
      Defaults to homedir + "/nest/pages". 
   */
   pagedir = "nest/pages"

   /*# Directory where services are stored on the site.
      Defaults to homedir + "/nest/services". 
   */
   site_srv_dir = "nest/srv"

   site_dm_dir = "nest/dm"
   
   /*# Directory where online service resources are stored on the site.
      
   */
   site_res_dir = "nest/res"
   
   /*# Directory where online site services keeps their skins.
      
   */
   site_skins_dir = "nest/skins"
   
   /*# Extra module configuration that may be set at index. */
   mod_config = [=>]
   
   function addModConfig( modName, config )
      // well, not a great deal, but it's just to be more transparent:
      if modName.typeId() != StringType or config.typeId() != DictionaryType
         raise NestError( NestError.eparams, "", "addModConfig: S, D" )
      end
      
      self.mod_config[ modName ] = config 
   end
   
end
