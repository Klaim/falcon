/*
   FALCON - The Falcon Programming Language

   Nest - Falcon web applcation engine

   FILE: InputText.fal

   AJAX widgeting subsystem -- input field.
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: Mon, 26 Sep 2011 11:55:58 +0200

   -------------------------------------------------------------------
   (C) Copyright 2011: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/

import from nest.widgets.widget in widget

/*# Input text
*/
class InputText( id, prompt, iPrompt ) from widget.Widget( id )
   tag = "input"
   isSelfClosing = true
   iPrompt = iPrompt
   label = prompt ? prompt : ""
   //# Style color to be applied on the "empty field" entity
   blurcolor = "#999"

   //# in forms, we do have values
   isValueHost = true

   init
      if self.props == nil: self.props = [=>]
      self.props['name'] = nil   // will be filled at render
      self.props['type'] = "text"
      // TODO: Remove this when we have automatic parentship
      self.addClassInParentship( InputText )
   end

   function onRender()
      if self.iPrompt
         self.props['onblur'] = "this.checkIPrompt();"
         self.props['onfocus'] = "this.disableIPrompt();"

         if self.onCreate
            self.onCreate += "this.checkIPrompt();"
         else
            self.onCreate = "this.checkIPrompt();"
         end

         self.jsMethods["setfocus"] = "
            function(){
               var other = Nest.i(this.id + '.iprompt');
               if ( other != null && other.style.display != 'none' ){other.focus();}
               else{ this.focus();}
            }"
            
         self.jsMethods["checkIPrompt"] = @"
            function() {
               var other = Nest.i(this.id + '.iprompt');
               if(this.value.length == 0 ) {
                  this.style.display = 'none';
                  other.style.display = '';
               }
               else {
                  other.style.display = 'none';
                  this.style.display = '';
               }
            }"
            
         self.jsMethods["disableIPrompt"] = "
            function() {
               Nest.i(this.id + '.iprompt').style.display = 'none';
               this.style.display = '';
               this.focus();
            }"
      else
         self.jsMethods["setfocus"] = "function(){this.focus();}"
      end
   end

   function renderCore()
      res = self.widget.Widget.renderCore()
      if self.iPrompt
         id = self.getFullID()
         res += @"<input id=\"$(id).iprompt\" type=\"text\" value=\"$(self.iPrompt)\""
         if 'class' in self.props: res += " class=\""+self.props['class']+"\""
         if 'size' in self.props: res += " size=\""+self.props['size']+"\""
         if 'style' in self.props
            res += @" style=\""+self.props['style']+";display:none;color:$(self.blurcolor)\""
         else
            res += @" style=\"display:none;color:$(self.blurcolor)\""
         end
         
         res += @" onfocus=\"Nest.i('$(id)').disableIPrompt()\"/>"
      end

      return res
   end
   

   function onEnter( jsFunc )
      onkeydown = "if( event.which == 13 || event.keyCode == 13 ) this.onEnter();"
      if 'onkeydown' in self.props
         self.props['onkeydown'] += onkeydown
      else
         self.props['onkeydown'] = onkeydown
      end
      self.jsMethods["onEnter"] = jsFunc
   end
   
   function onEsc( jsFunc )
      onkeydown = "if( event.which == 27 || event.keyCode == 27) this.onEsc();"
      if 'onkeydown' in self.props
         self.props['onkeydown'] += onkeydown
      else
         self.props['onkeydown'] = onkeydown
      end
      self.jsMethods["onEsc"] = jsFunc
   end
   
   
end

