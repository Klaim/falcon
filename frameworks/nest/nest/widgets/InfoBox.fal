/*
   FALCON - The Falcon Programming Language

   Nest - Falcon web applcation engine

   FILE: InfoBox.fal

   AJAX widgeting subsystem -- Inofrmative popup widget.
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: Sun, 02 Oct 2011 13:53:51 +0200

   -------------------------------------------------------------------
   (C) Copyright 2011: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/

import from nest.widgets.widget in widget

class _InfoBoxText(id, title, content) from widget.Widget( id )
   content = content

   imgclose= Nest.resLink( "infobox_close.png" )

   title = title
   titleHeight = 23

   width = 350
   height = 200
   fadeInTime = 600
   fadeOutTime = 250

   jsMethods = [
         "show" => @'
         function(event) {
            Nest.reposition(event, this, 10, 10, $(self.height), $(self.width) );
            var scroller = Nest.i(this.id + ".scroller" );
            this.style.display = "";
            this.style.overflow= "hidden";
            scroller.style.overflow= "hidden";
            var self = this;
            var trans = {
               object: this,
               time: $(self.fadeInTime),
               fromstyle: {
                  "width": 30,
                  "height": 10,
                  "opacity": 0.2
               },
               tostyle: {
                  "width": "|$(self.width)|px",
                  "height": "|$(self.height)|px",
                  "opacity": 0.9
               },
               ondone: function(){
                     scroller.style.overflow = "auto";
                  }
            };
            Nest.addTransition( trans );
         }',

         "hide" => @'
            function() {
               var self = this;
               var hidef = function() { self.style.display = "none"; }
               Nest.transite( this, $(self.fadeOutTime), {"opacity":0}, {"opacity":0.9}, null, hidef );
            }'
   ]

   init
      if self.props == nil: self.props = [=>]
      self.props["style"] = "
            display:none;
            padding:0;
            margin:0;
            position:absolute;
            "
      self.props["class"] = "nest_InfoBoxText"

      // TODO: Remove this when we have automatic parentship
      self.addClassInParentship( _InfoBoxText )   
   end

   function renderContent()
      fullID = self.getFullID()
      hc = self.height - self.titleHeight 
      return @"
         <div id=\"$(fullID).titlebar\" class=\"titlebar\" style=\"height:$(self.titleHeight)px\"><span\">$(self.title)</span>
            <img src=\"$(self.imgclose)\" onclick=\"Nest.i('$(fullID)').hide(); Nest.eatEvent(event);\"
                  style=\"position:absolute; top:3px; right:3px; cursor: hand; cursor: pointer; display:inline;\"/>
         </div>
         <div id=\"$(fullID).scroller\" style=\"padding:0px;height:$(hc)px\">
            <div id=\"$(fullID).contentbox\" class=\"contentbox\">$(self.content)</div>
         </div>"
   end
end

/*# Inofrmative popup widget.
   @param id The widget ID
   @param content The HTML content of the text box
   @optparam icon Icon location used for the informative popup.

   This method generates a popup that gets displayed when the
   user clicks the given icon (by default, "res/info.png").

   Style components:
@code
   (I)   << img id=[widget id]   widget class InfoBox
   
   +++++++++++++++++++++++++++++++++++++++++ << widget class  _InfoBoxText
   + Title bar                         [X] + << div id=[widget id].titlebar class=titlebar
   +++++++++++++++++++++++++++++++++++++++++
   +                                       + << div id=[widget id].contentbox class=contentbox
   +                                       +
   +                                       +
   +                                       +
   +                                       +
   +                                       +
   +                                       +
   +++++++++++++++++++++++++++++++++++++++++
@endcode
*/
class InfoBox( id, title, content, icon ) from widget.Widget( id )

   tag = "img"
   content = content
   icon = icon? icon : Nest.resLink("info.png")
   isSelfClosing = true

   infobox = _InfoBoxText( "infobox", title, content )

   init
      // activate effects
      Nest.requireJS("fx")
      // add the infobox
      self.addChild( self.infobox )
      if self.props == nil: self.props = [=>]
      self.props["border"] = "0"
      self.props["style"] = "cursor:pointer"

      // TODO: Remove this when we have automatic parentship
      self.addClassInParentship( InfoBox )   
   end

   function onSetup()
/*      self.jsMethods = [
            "onclick" => "function(event) {" + self.infobox.jsCall( 'show', 'event', self.getFullID() ) +"
                  ;Nest.eatEvent(event);
               }"
         ]*/
      self.jsMethods = [
            "onclick" => "function(event) {Nest.i('" + self.infobox.getFullID() + "').show(event); Nest.eatEvent(event); }"
         ]
   end

   function onRender()
      self.props["src"] = self.icon
   end
end

