/*
   FALCON - The Falcon Programming Language

   Nest - Falcon web applcation engine

   FILE: InfoBox.fal

   AJAX widgeting subsystem -- Inofrmative popup widget.
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: Sun, 02 Oct 2011 13:53:51 +0200

   -------------------------------------------------------------------
   (C) Copyright 2011: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/

import from nest.widgets.widget in widget

class _InfoBoxText(id, title, content) from widget.Widget( id )
   content = content

   imgclose= Nest.resLink( "infobox_close.png" )

   titlestyle = "
      background:#181818;
      color:#E0E0E0;"
   title = title

   width = 350
   height = 200

   jsMethods = [
         "show" => @'
         function(itemID) {
            var pos = Nest.findPos(Nest.i(itemID));
            this.style.left = pos.x+20;
            this.style.top = pos.y+20;
            this.style.display = "";
            this.style.overflow= "hidden";
            var self = this;
            var trans = {
               object: this,
               time: 1000,
               fromstyle: {
                  "width": 30,
                  "height": 10,
                  "opacity": 0.2
               },
               tostyle: {
                  "width": "|$(self.width)|px",
                  "height": "|$(self.height)|px",
                  "opacity": 0.9
               },
               ondone: function(){ self.style.overflow = "auto"; }
            };
            Nest.addTransition( trans );
         }',

         "hide" => @'
            function() {
               var self = this;
               var hidef = function() { self.style.display = "none"; }
               Nest.transite( this, 250, {opacity:0}, null, null, hidef );
            }'
   ]

   init
      if self.props == nil: self.props = [=>]
      // Start with overflow hidden, will become auto after full transition.
      self.props["style"] = @"
            display:none;
            position:absolute;
            border:1px solid;
            background:white;
            alpha:0.5;
            padding:0px;
            margin:1px;
            "

      // TODO: Remove this when we have automatic parentship
      self.addClassInParentship( _InfoBoxText )   
   end

   function renderContent()
      return @"<div style=\"$(self.titlestyle)\">$(self.title) <img src=\"$(self.imgclose)\" onclick=\"Nest.i('"+self.getFullID()+"').hide(); \" style=\"float:right;cursor: pointer;cursor: hand;\"/></div>" +
            "<div style=\"padding:4px\">" +self.content + "\n</div>\n"
   end
end

/*# Inofrmative popup widget.
   @param id The widget ID
   @param content The HTML content of the text box
   @optparam icon Icon location used for the informative popup.

   This method generates a popup that gets displayed when the
   user clicks the given icon (by default, "res/info.png").
   This
*/
class InfoBox( id, title, content, icon ) from widget.Widget( id )
   tag = "img"
   content = content
   icon = icon? icon : Nest.resLink("info.png")
   isSelfClosing = true

   infobox = _InfoBoxText( "infobox", title, content )

   init
      // activate effects
      Nest.requireJS("fx")
      // add the infobox
      self.addChild( self.infobox )
      if self.props == nil: self.props = [=>]
      self.props["src"] = self.icon
      self.props["border"] = "0"

	  self.addStyle( "cursor: pointer;cursor: hand;" )
      // TODO: Remove this when we have automatic parentship
      self.addClassInParentship( InfoBox )   
   end

   function onSetup()
      self.jsMethods = [
            "onclick" => self.infobox.makeCall( "show", self.getFullID() )
         ]
   end
end

