/*
   FALCON - The Falcon Programming Language

   Nest - Falcon web applcation engine

   FILE: PasswordStrength.fal

   AJAX widgeting subsystem -- A field checking strengt of a password
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: Mon, 26 Sep 2011 11:55:58 +0200

   -------------------------------------------------------------------
   (C) Copyright 2011: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/

import from nest.widgets.widget in widget

class PasswordStrength( id, pwd_widget ) from widget.Widget( id )
   tag = "span"
   pwd_widget = pwd_widget
   content = ""

   desc_level0 = "Insecure";
   desc_level1 = "Very weak";
   desc_level2 = "Weak";
   desc_level3 = "Strong";
   desc_level4 = "Very strong";

   pswdMeterFunc = @'
function (pwd)
{
var score = 0;
// check lenght ->   min length:starting score
var oLen = { 15:18, 13:16, 11:14, 10:13, 9:12, 8:11, 7:10, 6:9 };
// check characters ->  score add x char:regexp 
var oMatch = { 1:"[a-z]", 2: "[A-Z]", 3:"\\d", 5:"\\W" };
// strenght levels in descending order
var oLevels = { 28:"$(self.desc_level4)", 24:"$(self.desc_level3)", 18:"$(self.desc_level2)", 10:"$(self.desc_level1)", 0:"$(self.desc_level0)" };

for (var nLen in oLen)
	{
	if (pwd.length>=nLen) 
		{ 
		score=parseInt(oLen[nLen]); 
		break; 
		}
	}

if (score==0) this.innerHTML=oLevels[0];
else 
	{
	for (var nPnt in oMatch)
		{
		re = new RegExp(oMatch[nPnt]);
		var n=0; var i=0;
		while (1)
			{
			pwdchk=pwd.substr(n);
			aRes = re.exec(pwdchk);
			if (!aRes) break;
			score+=parseInt(nPnt); i++;
			n+=(aRes.index+1);
			}
		}
	for (var sc in oLevels)
		{ if (score>=parseInt(sc)) { this.innerHTML=oLevels[sc]; break; }}
	}

this.strenght = sc;
Nest.message(this, "strength", sc);
}'

   jsMethods = [
      "checkStrength" => self.pswdMeterFunc
   ]

   jsListeners = [
      pwd_widget => "function( srcwid, msg, value ) { this.checkStrength(value); }"
   ]

   init
/*      hidvalue = widget.Widget( "strength" )
      hidvalue.tag = "input"
      hidvalue.props = ["type"=>"hidden", "value"=>0]
      self.addChild( hidvalue )*/

      // TODO: Remove this when we have automatic parentship
      self.addClassInParentship( PasswordStrength ) 
   end

/*   function onRender()
      self.jsMethods["getDesc"] = @'
      function( m ) {
         if( m < 20 ){ return "$(self.desc_level0)"; }
         if( m < 40 ){ return "$(self.desc_level1)"; }
         if( m < 60 ){ return "$(self.desc_level2)"; }
         if( m < 80 ){ return "$(self.desc_level3)"; }
         return "$(self.desc_level4)";
      }
      '
   end */

   function renderContent()
      return self.content
   end
end

