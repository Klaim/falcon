engine/engine.cpp:400: Engine init()
engine/engine.cpp:145: Engine creation started
engine/module.cpp:208: Creating internal module 'core'
engine/engine.cpp:317: Engine creation complete
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:73: Virtual machine created at 0xbfcb9370
engine/parser/parser.cpp:138: Parser::addState -- adding state 'Main'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'InlineFunc'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ClassBody'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'LambdaStart'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ProtoDecl'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ArrayDecl'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ClassStart'
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:80: Virtual machine create -- loading duplicate standard input stream
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:90: Virtual machine create -- loading duplicate standard output stream
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:100: Virtual machine create -- loading duplicate standard error stream
engine/modspace.cpp:139: ModSpace::add core with export
engine/parser/parser.cpp:138: Parser::addState -- adding state 'Main'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'InlineFunc'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ClassBody'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'LambdaStart'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ProtoDecl'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ArrayDecl'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ClassStart'
engine/module.cpp:208: Creating internal module 'Interactive'
engine/modspace.cpp:139: ModSpace::add Interactive with export
engine/modspace.cpp:303: ModSpace::link start
engine/modspace.cpp:365: ModSpace::exportFromModule core
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.DataReader
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.DataWriter
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.Path
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.Restorer
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.Storer
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.Stream
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.TextReader
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.TextStream
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.TextWriter
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.URI
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.iff
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.inspect
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.print
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.printl
engine/modspace.cpp:365: ModSpace::exportFromModule Interactive
engine/modspace.cpp:433: ModSpace::linkImports importing requests of core
engine/modspace.cpp:546: ModSpace::linkNSImports honoring namespace imports requests of core
engine/modspace.cpp:433: ModSpace::linkImports importing requests of Interactive
engine/modspace.cpp:546: ModSpace::linkNSImports honoring namespace imports requests of Interactive
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "-1"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> - 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_neg) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_neg'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 2 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> -, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg'
engine/parser/rule.cpp:191: Rule::match(Expr_neg) -- descendable 'Expr' found at 1
engine/parser/rule.cpp:203: Rule::match(Expr_neg) -- actually descending 'Expr' found at 1 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 1
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 1
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_neg' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 1
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 1
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: -, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 1
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 1
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 1
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 1
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 1
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> -, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_neg) -- descendable 'Expr' found at 1
engine/parser/rule.cpp:224: Rule::match(Expr_neg) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_neg'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1006: Parser::applyPaths -- Need more tokens (same arity), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> -, Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg'
engine/parser/rule.cpp:224: Rule::match(Expr_neg) -- matched (mode incremental) at 2
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_neg' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_neg -- state depth 1 -- state id 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a40530 to 0x9a405e8 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Expr_neg -- state depth 1 -- state id 1
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a405e8 to 0x9a40628 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 0 syms
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a40628 to 0x9a40178 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 1
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a40214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a40628 ((-1)) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprneg.cpp:42: Apply "(-1)"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x9a40628 ((-1)) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "{() -1}"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> { 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_lambda) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_lambda'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_lambda -- state depth 1 -- state id 2
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> <nothing>
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'LambdaStart'
engine/parser/parser.cpp:152: Parser::pushState -- pframes.size()=2
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40738
engine/parser/parser.cpp:1158: Applied rule Expr_lambda -- state depth 2 -- state id 3
engine/parser/parser.cpp:1162: Rule Expr_lambda detect pop-state
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> ( 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter LambdaStart
engine/parser/rule.cpp:224: Rule::match(Params in lit) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(LambdaParams) -- match 'Params in lit'
engine/parser/state.cpp:79: State::findPaths -- nt-token LambdaParams match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> (, ) 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Params in lit'
engine/parser/rule.cpp:191: Rule::match(Params in lit) -- descendable 'ListSymbol' found at 1
engine/parser/rule.cpp:203: Rule::match(Params in lit) -- actually descending 'ListSymbol' found at 1 (adding stack)
engine/parser/rule.cpp:151: Rule::match(ListSymbol_empty) -- always matching when at end
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(ListSymbol) -- match 'ListSymbol_empty'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Params in lit' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule ListSymbol_empty -- state depth 2 -- state id 3
engine/parser/parser.cpp:490: Parser::simplify -- 0 tokens -> ListSymbol
engine/parser/parser.cpp:1158: Applied rule ListSymbol_empty -- state depth 2 -- state id 3
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> (, ListSymbol, )
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Params in lit'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on LambdaParams
engine/parser/rule.cpp:191: Rule::match(Params in lit) -- descendable 'ListSymbol' found at 1
engine/parser/rule.cpp:224: Rule::match(Params in lit) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(LambdaParams) -- match 'Params in lit'
engine/parser/parser.cpp:846: Parser::findPaths -- 'LambdaParams'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Params in lit -- state depth 2 -- state id 3
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:185: Parser::popState -- popping state
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40738
engine/parser/parser.cpp:210: Parser::popState -- now topmost state is 'Main'
engine/parser/parser.cpp:218: Parser::popState -- pframes.size()=2, stack now: >> Expr
engine/sp/parsercontext.cpp:586: ParserContext::openBlock type 'SynTree'
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'InlineFunc'
engine/parser/parser.cpp:152: Parser::pushState -- pframes.size()=1
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40738
engine/parser/parser.cpp:1158: Applied rule Params in lit -- state depth 2 -- state id 4
engine/parser/parser.cpp:1162: Rule Params in lit detect pop-state
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> - 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter InlineFunc
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_neg) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_neg'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 2 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> -, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg'
engine/parser/rule.cpp:191: Rule::match(Expr_neg) -- descendable 'Expr' found at 1
engine/parser/rule.cpp:203: Rule::match(Expr_neg) -- actually descending 'Expr' found at 1 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 1
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 1
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_neg' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 2 -- state id 4
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 2 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: -, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 1
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 1
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 1
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 2 -- state id 4
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 2 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> -, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_neg) -- descendable 'Expr' found at 1
engine/parser/rule.cpp:224: Rule::match(Expr_neg) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_neg'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1006: Parser::applyPaths -- Need more tokens (same arity), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> -, Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg'
engine/parser/rule.cpp:224: Rule::match(Expr_neg) -- matched (mode incremental) at 2
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_neg' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_neg -- state depth 2 -- state id 4
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a40920 to 0x9a40970 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Expr_neg -- state depth 2 -- state id 4
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 2 -- state id 4
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a40970 to 0x9a409b0 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 0 syms
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a409b0 to 0x9a40b00 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 2 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> end 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter InlineFunc
engine/parser/rule.cpp:224: Rule::match(end_small) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Small END) -- match 'end_small'
engine/parser/state.cpp:79: State::findPaths -- nt-token Small END match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule end_small -- state depth 2 -- state id 4
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> <nothing>
engine/sp/parsercontext.cpp:674: ParserContext::closeContext -- closing context on depth 2
engine/parser/parser.cpp:185: Parser::popState -- popping state
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40738
engine/parser/parser.cpp:210: Parser::popState -- now topmost state is 'Main'
engine/parser/parser.cpp:218: Parser::popState -- pframes.size()=1, stack now: >> Expr
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a40970 to (nil) (now 0x9a409b0)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a40970 to 0x9a40b48 (now (nil))
engine/parser/parser.cpp:1158: Applied rule end_small -- state depth 1 -- state id 2
engine/parser/parser.cpp:1162: Rule end_small detect pop-state
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 2
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a40b48 to 0x9a409b0 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 0 syms
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a409b0 to 0x9a40690 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 2
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a40214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a409b0 ({()
(-1)
}) data size: 1
engine/psteps/exprlit.cpp:192: Apply "{()
(-1)
}"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x9a409b0 ({()
(-1)
}) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: ""
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: " 1+ -1"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Int 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 5
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 5
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 5
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 5
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, + 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_plus) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_plus'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, +, (neg) 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_plus'
engine/parser/rule.cpp:191: Rule::match(Expr_plus) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_plus) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:224: Rule::match(Expr_neg2) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_neg2'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_plus' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 2 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, +, >> (neg), Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg2'
engine/parser/rule.cpp:191: Rule::match(Expr_neg2) -- descendable 'Expr' found at 3
engine/parser/rule.cpp:203: Rule::match(Expr_neg2) -- actually descending 'Expr' found at 3 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 3
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 3
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_neg2' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 5
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 5
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, +, (neg), >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 3
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 3
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 3
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 5
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 5
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, +, >> (neg), Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg2'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_neg2) -- descendable 'Expr' found at 3
engine/parser/rule.cpp:224: Rule::match(Expr_neg2) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_neg2'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1006: Parser::applyPaths -- Need more tokens (same arity), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, +, >> (neg), Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg2'
engine/parser/rule.cpp:224: Rule::match(Expr_neg2) -- matched (mode incremental) at 4
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_neg2' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_neg2 -- state depth 1 -- state id 5
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a40f30 to 0x9a40f80 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Expr_neg2 -- state depth 1 -- state id 5
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, +, Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_plus'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_plus) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_plus) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_plus'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_plus -- state depth 1 -- state id 5
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a40a70 to 0x9a40fc0 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a40f80 to 0x9a40fc0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_plus -- state depth 1 -- state id 5
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 5
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a40fc0 to 0x9a41018 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 0 syms
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41018 to 0x9a40738 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 5
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a40214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a41018 ((1+(-1))) data size: 1
engine/psteps/exprmath.cpp:354: Apply "(1+(-1))"
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprneg.cpp:42: Apply "(-1)"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x9a41018 ((1+(-1))) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: ""
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "1 + (-1)"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Int 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 6
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 6
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 6
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 6
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, + 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_plus) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_plus'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, +, ( 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_plus'
engine/parser/rule.cpp:191: Rule::match(Expr_plus) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_plus) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:224: Rule::match(Expr_pars) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_pars'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_plus' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, +, >> (, (neg) 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_pars'
engine/parser/rule.cpp:191: Rule::match(Expr_pars) -- descendable 'Expr' found at 3
engine/parser/rule.cpp:203: Rule::match(Expr_pars) -- actually descending 'Expr' found at 3 (adding stack)
engine/parser/rule.cpp:224: Rule::match(Expr_neg2) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_neg2'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_pars' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 2 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, +, (, >> (neg), Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg2'
engine/parser/rule.cpp:191: Rule::match(Expr_neg2) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_neg2) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_neg2' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 6
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 6
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, +, (, (neg), >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 6
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 6
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, +, (, >> (neg), Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg2'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_neg2) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_neg2) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_neg2'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1006: Parser::applyPaths -- Need more tokens (same arity), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, +, (, >> (neg), Expr, ) 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg2'
engine/parser/rule.cpp:224: Rule::match(Expr_neg2) -- matched (mode incremental) at 5
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_neg2' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_neg2 -- state depth 1 -- state id 6
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41220 to 0x9a41270 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Expr_neg2 -- state depth 1 -- state id 6
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: Expr, +, >> (, Expr, )
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_pars'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_pars) -- descendable 'Expr' found at 3
engine/parser/rule.cpp:224: Rule::match(Expr_pars) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_pars'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_pars -- state depth 1 -- state id 6
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_pars -- state depth 1 -- state id 6
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, +, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_plus'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_plus) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_plus) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_plus'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1006: Parser::applyPaths -- Need more tokens (same arity), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, +, Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_plus'
engine/parser/rule.cpp:224: Rule::match(Expr_plus) -- matched (mode incremental) at 3
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_plus' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_plus -- state depth 1 -- state id 6
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41100 to 0x9a412b0 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41270 to 0x9a412b0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_plus -- state depth 1 -- state id 6
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 6
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a412b0 to 0x9a41308 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 0 syms
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41308 to 0x9a41058 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 6
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a40214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a41308 ((1+(-1))) data size: 1
engine/psteps/exprmath.cpp:354: Apply "(1+(-1))"
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprneg.cpp:42: Apply "(-1)"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x9a41308 ((1+(-1))) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: ""
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "{() 1+(-1)}"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> { 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_lambda) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_lambda'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_lambda -- state depth 1 -- state id 7
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> <nothing>
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'LambdaStart'
engine/parser/parser.cpp:152: Parser::pushState -- pframes.size()=2
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a41388
engine/parser/parser.cpp:1158: Applied rule Expr_lambda -- state depth 2 -- state id 8
engine/parser/parser.cpp:1162: Rule Expr_lambda detect pop-state
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> ( 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter LambdaStart
engine/parser/rule.cpp:224: Rule::match(Params in lit) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(LambdaParams) -- match 'Params in lit'
engine/parser/state.cpp:79: State::findPaths -- nt-token LambdaParams match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> (, ) 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Params in lit'
engine/parser/rule.cpp:191: Rule::match(Params in lit) -- descendable 'ListSymbol' found at 1
engine/parser/rule.cpp:203: Rule::match(Params in lit) -- actually descending 'ListSymbol' found at 1 (adding stack)
engine/parser/rule.cpp:151: Rule::match(ListSymbol_empty) -- always matching when at end
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(ListSymbol) -- match 'ListSymbol_empty'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Params in lit' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule ListSymbol_empty -- state depth 2 -- state id 8
engine/parser/parser.cpp:490: Parser::simplify -- 0 tokens -> ListSymbol
engine/parser/parser.cpp:1158: Applied rule ListSymbol_empty -- state depth 2 -- state id 8
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> (, ListSymbol, )
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Params in lit'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on LambdaParams
engine/parser/rule.cpp:191: Rule::match(Params in lit) -- descendable 'ListSymbol' found at 1
engine/parser/rule.cpp:224: Rule::match(Params in lit) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(LambdaParams) -- match 'Params in lit'
engine/parser/parser.cpp:846: Parser::findPaths -- 'LambdaParams'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Params in lit -- state depth 2 -- state id 8
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:185: Parser::popState -- popping state
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a41388
engine/parser/parser.cpp:210: Parser::popState -- now topmost state is 'Main'
engine/parser/parser.cpp:218: Parser::popState -- pframes.size()=2, stack now: >> Expr
engine/sp/parsercontext.cpp:586: ParserContext::openBlock type 'SynTree'
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'InlineFunc'
engine/parser/parser.cpp:152: Parser::pushState -- pframes.size()=1
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a410c8
engine/parser/parser.cpp:1158: Applied rule Params in lit -- state depth 2 -- state id 9
engine/parser/parser.cpp:1162: Rule Params in lit detect pop-state
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Int 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter InlineFunc
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 2 -- state id 9
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 2 -- state id 9
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 2 -- state id 9
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 2 -- state id 9
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, + 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_plus) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_plus'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, +, ( 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_plus'
engine/parser/rule.cpp:191: Rule::match(Expr_plus) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_plus) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:224: Rule::match(Expr_pars) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_pars'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_plus' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, +, >> (, (neg) 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_pars'
engine/parser/rule.cpp:191: Rule::match(Expr_pars) -- descendable 'Expr' found at 3
engine/parser/rule.cpp:203: Rule::match(Expr_pars) -- actually descending 'Expr' found at 3 (adding stack)
engine/parser/rule.cpp:224: Rule::match(Expr_neg2) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_neg2'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_pars' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 2 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, +, (, >> (neg), Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg2'
engine/parser/rule.cpp:191: Rule::match(Expr_neg2) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_neg2) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_neg2' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 2 -- state id 9
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 2 -- state id 9
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, +, (, (neg), >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 2 -- state id 9
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 2 -- state id 9
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, +, (, >> (neg), Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg2'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_neg2) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_neg2) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_neg2'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1006: Parser::applyPaths -- Need more tokens (same arity), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, +, (, >> (neg), Expr, ) 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg2'
engine/parser/rule.cpp:224: Rule::match(Expr_neg2) -- matched (mode incremental) at 5
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_neg2' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_neg2 -- state depth 2 -- state id 9
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a414d0 to 0x9a41520 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Expr_neg2 -- state depth 2 -- state id 9
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: Expr, +, >> (, Expr, )
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_pars'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_pars) -- descendable 'Expr' found at 3
engine/parser/rule.cpp:224: Rule::match(Expr_pars) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_pars'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_pars -- state depth 2 -- state id 9
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_pars -- state depth 2 -- state id 9
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, +, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_plus'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_plus) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_plus) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_plus'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1006: Parser::applyPaths -- Need more tokens (same arity), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, +, Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_plus'
engine/parser/rule.cpp:224: Rule::match(Expr_plus) -- matched (mode incremental) at 3
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_plus' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_plus -- state depth 2 -- state id 9
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a40ed0 to 0x9a41560 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41520 to 0x9a41560 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_plus -- state depth 2 -- state id 9
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 2 -- state id 9
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41560 to 0x9a415b8 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 0 syms
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a415b8 to 0x9a41680 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 2 -- state id 9
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> end 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter InlineFunc
engine/parser/rule.cpp:224: Rule::match(end_small) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Small END) -- match 'end_small'
engine/parser/state.cpp:79: State::findPaths -- nt-token Small END match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule end_small -- state depth 2 -- state id 9
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> <nothing>
engine/sp/parsercontext.cpp:674: ParserContext::closeContext -- closing context on depth 2
engine/parser/parser.cpp:185: Parser::popState -- popping state
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a410c8
engine/parser/parser.cpp:210: Parser::popState -- now topmost state is 'Main'
engine/parser/parser.cpp:218: Parser::popState -- pframes.size()=1, stack now: >> Expr
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41560 to (nil) (now 0x9a415b8)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41560 to 0x9a416c8 (now (nil))
engine/parser/parser.cpp:1158: Applied rule end_small -- state depth 1 -- state id 7
engine/parser/parser.cpp:1162: Rule end_small detect pop-state
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 7
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a416c8 to 0x9a415b8 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 0 syms
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a415b8 to 0x9a41180 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 7
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a40214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a415b8 ({()
(1+(-1))
}) data size: 1
engine/psteps/exprlit.cpp:192: Apply "{()
(1+(-1))
}"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x9a415b8 ({()
(1+(-1))
}) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: ""
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "ops = {() a*2}"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 10
engine/sp/parsercontext.cpp:261: ParserContext::addVariable ops
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 10
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, { 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_lambda) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_lambda'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_lambda -- state depth 1 -- state id 10
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> <nothing>
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'LambdaStart'
engine/parser/parser.cpp:152: Parser::pushState -- pframes.size()=4
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a41a08
engine/parser/parser.cpp:1158: Applied rule Expr_lambda -- state depth 2 -- state id 11
engine/parser/parser.cpp:1162: Rule Expr_lambda detect pop-state
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> ( 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter LambdaStart
engine/parser/rule.cpp:224: Rule::match(Params in lit) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(LambdaParams) -- match 'Params in lit'
engine/parser/state.cpp:79: State::findPaths -- nt-token LambdaParams match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> (, ) 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Params in lit'
engine/parser/rule.cpp:191: Rule::match(Params in lit) -- descendable 'ListSymbol' found at 1
engine/parser/rule.cpp:203: Rule::match(Params in lit) -- actually descending 'ListSymbol' found at 1 (adding stack)
engine/parser/rule.cpp:151: Rule::match(ListSymbol_empty) -- always matching when at end
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(ListSymbol) -- match 'ListSymbol_empty'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Params in lit' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule ListSymbol_empty -- state depth 2 -- state id 11
engine/parser/parser.cpp:490: Parser::simplify -- 0 tokens -> ListSymbol
engine/parser/parser.cpp:1158: Applied rule ListSymbol_empty -- state depth 2 -- state id 11
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> (, ListSymbol, )
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Params in lit'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on LambdaParams
engine/parser/rule.cpp:191: Rule::match(Params in lit) -- descendable 'ListSymbol' found at 1
engine/parser/rule.cpp:224: Rule::match(Params in lit) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(LambdaParams) -- match 'Params in lit'
engine/parser/parser.cpp:846: Parser::findPaths -- 'LambdaParams'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Params in lit -- state depth 2 -- state id 11
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:185: Parser::popState -- popping state
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a41a08
engine/parser/parser.cpp:210: Parser::popState -- now topmost state is 'Main'
engine/parser/parser.cpp:218: Parser::popState -- pframes.size()=4, stack now: Expr, =, >> Expr
engine/sp/parsercontext.cpp:586: ParserContext::openBlock type 'SynTree'
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'InlineFunc'
engine/parser/parser.cpp:152: Parser::pushState -- pframes.size()=3
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a41a08
engine/parser/parser.cpp:1158: Applied rule Params in lit -- state depth 2 -- state id 12
engine/parser/parser.cpp:1162: Rule Params in lit detect pop-state
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter InlineFunc
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 2 -- state id 12
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 2 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 2 -- state id 12
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 2 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, * 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_times) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_times'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, *, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_times'
engine/parser/rule.cpp:191: Rule::match(Expr_times) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_times) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_times' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 2 -- state id 12
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 2 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, *, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 2 -- state id 12
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 2 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, *, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_times'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_times) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_times) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_times'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1006: Parser::applyPaths -- Need more tokens (same arity), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, *, Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_times'
engine/parser/rule.cpp:224: Rule::match(Expr_times) -- matched (mode incremental) at 3
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_times' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_times -- state depth 2 -- state id 12
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42180 to 0x9a41b40 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41af0 to 0x9a41b40 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_times -- state depth 2 -- state id 12
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 2 -- state id 12
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41b40 to 0x9a41b98 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 0 syms
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41b98 to 0x9a41cf0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 2 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> end 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter InlineFunc
engine/parser/rule.cpp:224: Rule::match(end_small) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Small END) -- match 'end_small'
engine/parser/state.cpp:79: State::findPaths -- nt-token Small END match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule end_small -- state depth 2 -- state id 12
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> <nothing>
engine/sp/parsercontext.cpp:674: ParserContext::closeContext -- closing context on depth 2
engine/parser/parser.cpp:185: Parser::popState -- popping state
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a41a08
engine/parser/parser.cpp:210: Parser::popState -- now topmost state is 'Main'
engine/parser/parser.cpp:218: Parser::popState -- pframes.size()=3, stack now: Expr, =, >> Expr
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41b40 to (nil) (now 0x9a41b98)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41b40 to 0x9a41d38 (now (nil))
engine/parser/parser.cpp:1158: Applied rule end_small -- state depth 1 -- state id 10
engine/parser/parser.cpp:1162: Rule end_small detect pop-state
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 10
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 10
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 10
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: ops :)
engine/sp/parsercontext.cpp:350: ParserContext::defineSymbol trying to define symbol "ops"
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "ops"
engine/sp/parsercontext.cpp:373: ParserContext::defineSymbol defined "ops" as 1
engine/sp/parsercontext.cpp:301: ParserContext::undoVariable ops
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41410 to 0x9a41be8 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41d38 to 0x9a41be8 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 10
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 10
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41be8 to 0x9a41c60 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 0 syms
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a41c60 to 0x9a41388 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a40214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a41c60 ((ops = {()
(a*2)
   })) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "(ops = {()
(a*2)
   })"
engine/psteps/exprlit.cpp:192: Apply "{()
(a*2)
}"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x9a41c60 ((ops = {()
(a*2)
   })) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a= 10"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 13
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 13
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 13
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 13
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 13
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 13
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 13
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 13
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 13
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 13
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 13
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: a :)
engine/sp/parsercontext.cpp:350: ParserContext::defineSymbol trying to define symbol "a"
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:373: ParserContext::defineSymbol defined "a" as 1
engine/sp/parsercontext.cpp:301: ParserContext::undoVariable a
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a424c0 to 0x9a42288 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42238 to 0x9a42288 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 13
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 13
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42288 to 0x9a42300 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 0 syms
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42300 to 0x9a42478 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 13
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a40214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a42300 ((a = 10)) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "(a = 10)"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x9a42300 ((a = 10)) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "ops()"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 14
engine/sp/parsercontext.cpp:261: ParserContext::addVariable ops
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 14
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, ( 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_call) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_call'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, (, ) 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_call'
engine/parser/rule.cpp:191: Rule::match(Expr_call) -- descendable 'ListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_call) -- actually descending 'ListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(ListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(ListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:151: Rule::match(ListExpr_empty) -- always matching when at end
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(ListExpr) -- match 'ListExpr_empty'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_call' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule ListExpr_empty -- state depth 1 -- state id 14
engine/parser/parser.cpp:490: Parser::simplify -- 0 tokens -> ListExpr
engine/parser/parser.cpp:1158: Applied rule ListExpr_empty -- state depth 1 -- state id 14
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, (, ListExpr, )
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_call'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_call) -- descendable 'ListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_call) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_call'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_call -- state depth 1 -- state id 14
engine/parser/parser.cpp:490: Parser::simplify -- 4 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_call -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 14
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a423e0 to 0x9a425d0 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "ops"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "ops" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "ops" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a425d0 to 0x9a42788 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a40214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a425d0 (ops()) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprcall.cpp:73: Apply CALL ops()
engine/psteps/exprmath.cpp:354: Apply "(a*2)"
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a425d0 (ops()) data size: 2
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x9a425d0 (ops()) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: ""
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "ops[0]"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 15
engine/sp/parsercontext.cpp:261: ParserContext::addVariable ops
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 15
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 15
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 15
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [ 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_index' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 15
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 15
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 15
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 15
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 3), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, ] 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_index' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_index -- state depth 1 -- state id 15
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42ae0 to 0x9a42c18 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42bc8 to 0x9a42c18 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 4 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_index -- state depth 1 -- state id 15
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 15
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42c18 to 0x9a42c78 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "ops"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "ops" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "ops" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42c78 to 0x9a42740 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 15
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a40214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a42c78 ((ops[0])) data size: 1
engine/psteps/exprindex.cpp:62: Apply  "(ops[0])"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x9a42c78 ((ops[0])) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "ops[1]"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 16
engine/sp/parsercontext.cpp:261: ParserContext::addVariable ops
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 16
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [ 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_index' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 16
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 16
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 3), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, ] 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_index' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_index -- state depth 1 -- state id 16
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42d40 to 0x9a42e58 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42e08 to 0x9a42e58 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 4 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_index -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 16
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42e58 to 0x9a42eb8 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "ops"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "ops" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "ops" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42eb8 to 0x9a42a50 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a40214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a42eb8 ((ops[1])) data size: 1
engine/psteps/exprindex.cpp:62: Apply  "(ops[1])"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x9a42eb8 ((ops[1])) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: ""
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "ops[1] = 3"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a40210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 17
engine/sp/parsercontext.cpp:261: ParserContext::addVariable ops
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [ 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_index' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 17
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 3), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, ] 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_index' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_index -- state depth 1 -- state id 17
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42f88 to 0x9a43090 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a43040 to 0x9a43090 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 4 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_index -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 17
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 17
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 17
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 17
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: (ops[1]) :)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a43090 to 0x9a433b0 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a43130 to 0x9a433b0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 17
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 17
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a433b0 to 0x9a433f8 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "ops"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "ops" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "ops" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a433f8 to 0x9a42cb8 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a40214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a433f8 (((ops[1]) = 3)) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "((ops[1]) = 3)"
engine/psteps/exprindex.cpp:62: Apply lvalue "(ops[1])"
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a40210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: ""
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "ops[1] = Value(3)"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a41648
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 18
engine/sp/parsercontext.cpp:261: ParserContext::addVariable ops
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 18
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [ 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_index' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 18
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 18
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 3), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, ] 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_index' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_index -- state depth 1 -- state id 18
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42cb8 to 0x9a42fd8 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42f88 to 0x9a42fd8 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 4 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_index -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, Name 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 18
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 18
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, ( 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_call) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_call'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, (, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_call'
engine/parser/rule.cpp:191: Rule::match(Expr_call) -- descendable 'ListExpr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_call) -- actually descending 'ListExpr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(ListExpr_first) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(ListExpr_first) -- actually descending 'Expr' found at 4
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(ListExpr) -- match 'ListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_call' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 18
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, Expr, (, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 18
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, Expr, (, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'ListExpr_first'
engine/parser/rule.cpp:191: Rule::match(ListExpr_first) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(ListExpr_first) -- actually descending 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'ListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, Expr, (, >> Expr, ) 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 6
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'ListExpr_first'
engine/parser/rule.cpp:191: Rule::match(ListExpr_first) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(ListExpr_first) -- actually descending 'Expr' found at 4
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on ListExpr
engine/parser/rule.cpp:191: Rule::match(ListExpr_first) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(ListExpr_first) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(ListExpr) -- match 'ListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'ListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule ListExpr_first -- state depth 1 -- state id 18
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> ListExpr
engine/parser/parser.cpp:1158: Applied rule ListExpr_first -- state depth 1 -- state id 18
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: Expr, =, >> Expr, (, ListExpr, )
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_call'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_call) -- descendable 'ListExpr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_call) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_call'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_call -- state depth 1 -- state id 18
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a43190 to 0x9a42f20 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 4 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_call -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 18
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 18
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 18
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: (ops[1]) :)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42fd8 to 0x9a43708 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a42f20 to 0x9a43708 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 18
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 18
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a43708 to 0x9a43750 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "ops"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "ops" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "ops" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a43750 to 0x9a42db8 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a4164c
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 3
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a43750 (((ops[1]) = Class Value(3))) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "((ops[1]) = Class Value(3))"
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprcall.cpp:73: Apply CALL Class Value(3)
engine/psteps/exprindex.cpp:62: Apply lvalue "(ops[1])"
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a43790 to 0x9a41b40 (now (nil))
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x9a43750 (((ops[1]) = Class Value(3))) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a41648
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: ""
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "ops()"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x9a41b00
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 19
engine/sp/parsercontext.cpp:261: ParserContext::addVariable ops
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 19
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 19
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 19
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, ( 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_call) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_call'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, (, ) 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_call'
engine/parser/rule.cpp:191: Rule::match(Expr_call) -- descendable 'ListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_call) -- actually descending 'ListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(ListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(ListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:151: Rule::match(ListExpr_empty) -- always matching when at end
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(ListExpr) -- match 'ListExpr_empty'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_call' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule ListExpr_empty -- state depth 1 -- state id 19
engine/parser/parser.cpp:490: Parser::simplify -- 0 tokens -> ListExpr
engine/parser/parser.cpp:1158: Applied rule ListExpr_empty -- state depth 1 -- state id 19
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, (, ListExpr, )
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_call'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_call) -- descendable 'ListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_call) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_call'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_call -- state depth 1 -- state id 19
engine/parser/parser.cpp:490: Parser::simplify -- 4 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_call -- state depth 1 -- state id 19
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 19
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a430f0 to 0x9a43640 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "ops"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "ops" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "ops" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x9a43640 to 0x9a43820 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 19
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x9a41b04
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 3
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a43640 (ops()) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprcall.cpp:73: Apply CALL ops()
engine/psteps/exprmath.cpp:354: Apply "(a*3)"
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x9a43640 (ops()) data size: 2
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x9a43640 (ops()) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x9a41b00
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
