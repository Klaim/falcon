engine/engine.cpp:400: Engine init()
engine/engine.cpp:145: Engine creation started
engine/module.cpp:208: Creating internal module 'core'
engine/engine.cpp:317: Engine creation complete
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:73: Virtual machine created at 0xbfe30b50
engine/parser/parser.cpp:138: Parser::addState -- adding state 'Main'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'InlineFunc'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ClassBody'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'LambdaStart'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ProtoDecl'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ArrayDecl'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ClassStart'
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:80: Virtual machine create -- loading duplicate standard input stream
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:90: Virtual machine create -- loading duplicate standard output stream
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:100: Virtual machine create -- loading duplicate standard error stream
engine/modspace.cpp:139: ModSpace::add core with export
engine/parser/parser.cpp:138: Parser::addState -- adding state 'Main'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'InlineFunc'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ClassBody'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'LambdaStart'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ProtoDecl'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ArrayDecl'
engine/parser/parser.cpp:138: Parser::addState -- adding state 'ClassStart'
engine/module.cpp:208: Creating internal module 'Interactive'
engine/modspace.cpp:139: ModSpace::add Interactive with export
engine/modspace.cpp:303: ModSpace::link start
engine/modspace.cpp:365: ModSpace::exportFromModule core
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.DataReader
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.DataWriter
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.Path
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.Restorer
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.Storer
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.Stream
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.TextReader
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.TextStream
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.TextWriter
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.URI
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.iff
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.inspect
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.print
engine/modspace.cpp:415: ModSpace::exportSymbol exporting core.printl
engine/modspace.cpp:365: ModSpace::exportFromModule Interactive
engine/modspace.cpp:433: ModSpace::linkImports importing requests of core
engine/modspace.cpp:546: ModSpace::linkNSImports honoring namespace imports requests of core
engine/modspace.cpp:433: ModSpace::linkImports importing requests of Interactive
engine/modspace.cpp:546: ModSpace::linkNSImports honoring namespace imports requests of Interactive
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a = "123""
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 1
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 1
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 1
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 1
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, String 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_String) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_String'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_String -- state depth 1 -- state id 1
engine/parser/parser.cpp:1158: Applied rule Atom_String -- state depth 1 -- state id 1
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 1
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 1
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 1
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 1
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 1
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: a :)
engine/sp/parsercontext.cpp:350: ParserContext::defineSymbol trying to define symbol "a"
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:373: ParserContext::defineSymbol defined "a" as 1
engine/sp/parsercontext.cpp:301: ParserContext::undoVariable a
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d54d8 to 0x81d5b28 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d5750 to 0x81d5b28 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 1
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d5b28 to 0x81d5ba0 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 0 syms
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d5ba0 to 0x81d5178 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 1
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d5ba0 ((a = "123")) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "(a = "123")"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d5ba0 ((a = "123")) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a[1:1] = "Hello""
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 2
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 2
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 2
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 2
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [ 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_index' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 2
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 2
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 2
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 2
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 3), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, : 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_index' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 4), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_Expr_range_index3' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 2
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 2
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, Expr, :, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 2
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 2
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr, :, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 5), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Expr, ] 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_Expr_range_index3' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3open) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3open) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index2) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index2'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_Expr_range_index2 -- state depth 1 -- state id 2
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d5d28 to 0x81d5db0 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d59a8 to 0x81d5db0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 6 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_Expr_range_index2 -- state depth 1 -- state id 2
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, String 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_String) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_String'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_String -- state depth 1 -- state id 2
engine/parser/parser.cpp:1158: Applied rule Atom_String -- state depth 1 -- state id 2
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 2
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 2
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 2
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 2
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 2
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: (a[[1:1]]) :)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d5db0 to 0x81d6190 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d5e50 to 0x81d6190 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 2
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 2
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6190 to 0x81d61d8 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d61d8 to 0x81d5cd0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 2
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d61d8 (((a[[1:1]]) = "Hello")) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "((a[[1:1]]) = "Hello")"
engine/psteps/exprindex.cpp:62: Apply lvalue "(a[[1:1]])"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d61d8 (((a[[1:1]]) = "Hello")) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 3
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 3
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 3
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 3
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 3
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d63b0 to 0x81d6438 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6438 to 0x81d6338 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 3
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d6438 (a) data size: 1
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d6438 (a) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a[1:5+1] = "Done""
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d6118
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 4
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 4
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [ 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_index' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 4
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 4
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 3), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, : 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_index' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 4), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_Expr_range_index3' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 4
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, Expr, :, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 4
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr, :, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 5), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Expr, + 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_Expr_range_index3' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:224: Rule::match(Expr_plus) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_plus'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, [, Expr, :, >> Expr, +, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_plus'
engine/parser/rule.cpp:191: Rule::match(Expr_plus) -- descendable 'Expr' found at 6
engine/parser/rule.cpp:203: Rule::match(Expr_plus) -- actually descending 'Expr' found at 6 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 6
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 6
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 7
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_plus' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 4
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, Expr, :, Expr, +, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 6
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 6
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 6
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 7
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 4
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, Expr, :, >> Expr, +, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_plus'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_plus) -- descendable 'Expr' found at 6
engine/parser/rule.cpp:224: Rule::match(Expr_plus) -- matched (mode full) at 7
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_plus'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1006: Parser::applyPaths -- Need more tokens (same arity), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, [, Expr, :, >> Expr, +, Expr, ] 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_plus'
engine/parser/rule.cpp:224: Rule::match(Expr_plus) -- matched (mode incremental) at 7
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_plus' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_plus -- state depth 1 -- state id 4
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d5f10 to 0x81d5ff0 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d5fa0 to 0x81d5ff0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_plus -- state depth 1 -- state id 4
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, [, Expr, :, Expr, ]
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3open) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3open) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index2) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index2'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_Expr_range_index2 -- state depth 1 -- state id 4
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6478 to 0x81d64f0 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6070 to 0x81d64f0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 6 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_Expr_range_index2 -- state depth 1 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, String 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_String) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_String'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_String -- state depth 1 -- state id 4
engine/parser/parser.cpp:1158: Applied rule Atom_String -- state depth 1 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 4
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 4
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 4
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 4
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: (a[[1:(5+1)]]) :)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d64f0 to 0x81d6910 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6578 to 0x81d6910 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 4
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 4
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6910 to 0x81d6958 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6958 to 0x81d6240 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 4
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d611c
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d6958 (((a[[1:(5+1)]]) = "Done")) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "((a[[1:(5+1)]]) = "Done")"
engine/psteps/exprindex.cpp:62: Apply lvalue "(a[[1:(5+1)]])"
engine/psteps/exprmath.cpp:354: Apply "(5+1)"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d6958 (((a[[1:(5+1)]]) = "Done")) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d6118
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d6118
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 5
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 5
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 5
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 5
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 5
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6ad8 to 0x81d6b90 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6b90 to 0x81d6a48 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 5
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d611c
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d6b90 (a) data size: 1
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d6b90 (a) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d6118
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a += "Hello""
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 6
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 6
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 6
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 6
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, += 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_auto_add) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_auto_add'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, +=, String 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_auto_add'
engine/parser/rule.cpp:191: Rule::match(Expr_auto_add) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_auto_add) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_String) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_String'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_auto_add' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_String -- state depth 1 -- state id 6
engine/parser/parser.cpp:1158: Applied rule Atom_String -- state depth 1 -- state id 6
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, +=, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 6
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 6
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, +=, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_auto_add'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_auto_add) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_auto_add) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_auto_add'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1006: Parser::applyPaths -- Need more tokens (same arity), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, +=, Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_auto_add'
engine/parser/rule.cpp:224: Rule::match(Expr_auto_add) -- matched (mode incremental) at 3
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_auto_add' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_auto_add -- state depth 1 -- state id 6
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6bd0 to 0x81d6618 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d65c8 to 0x81d6618 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_auto_add -- state depth 1 -- state id 6
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 6
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6618 to 0x81d6670 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6670 to 0x81d67d0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 6
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d6670 ((a+="Hello")) data size: 1
engine/psteps/exprmath.cpp:354: Apply "(a+="Hello")"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d6670 ((a+="Hello")) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 7
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 7
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 7
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 7
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 7
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6d58 to 0x81d6de0 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6de0 to 0x81d6cc0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 7
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d6de0 (a) data size: 1
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d6de0 (a) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a[2] = 32"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 8
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 8
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 8
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 8
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [ 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_index' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 8
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 8
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 8
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 8
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 3), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, ] 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_index' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_index -- state depth 1 -- state id 8
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6e20 to 0x81d6f18 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6ec8 to 0x81d6f18 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 4 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_index -- state depth 1 -- state id 8
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 8
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 8
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 8
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 8
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 8
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 8
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 8
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: (a[2]) :)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6f18 to 0x81d72c8 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d6fa8 to 0x81d72c8 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 8
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 8
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d72c8 to 0x81d7310 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7310 to 0x81d6700 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 8
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d7310 (((a[2]) = 32)) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "((a[2]) = 32)"
engine/psteps/exprindex.cpp:62: Apply lvalue "(a[2])"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d7310 (((a[2]) = 32)) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 9
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 9
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 9
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 9
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 9
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7440 to 0x81d74c8 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d74c8 to 0x81d73c8 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 9
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d74c8 (a) data size: 1
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d74c8 (a) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a[2:4] = 32"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 10
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 10
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [ 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_index' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 10
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 10
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 3), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, : 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_index' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 4), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_Expr_range_index3' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 10
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, Expr, :, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 10
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr, :, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 5), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Expr, ] 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_Expr_range_index3' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3open) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3open) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index2) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index2'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_Expr_range_index2 -- state depth 1 -- state id 10
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7508 to 0x81d70e0 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7098 to 0x81d70e0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 6 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_Expr_range_index2 -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 10
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 10
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 10
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 10
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 10
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: (a[[2:4]]) :)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d70e0 to 0x81d7828 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7150 to 0x81d7828 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 10
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 10
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7828 to 0x81d7870 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7870 to 0x81d68c0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 10
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d7870 (((a[[2:4]]) = 32)) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "((a[[2:4]]) = 32)"
engine/psteps/exprindex.cpp:62: Apply lvalue "(a[[2:4]])"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d7870 (((a[[2:4]]) = 32)) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 11
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 11
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 11
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 11
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 11
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d79b0 to 0x81d7a78 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7a78 to 0x81d7958 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 11
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d7a78 (a) data size: 1
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d7a78 (a) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a[1:-1] = """
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 12
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 12
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [ 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_index' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 12
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 12
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 3), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, : 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_index' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 4), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, (neg) 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:224: Rule::match(Expr_neg2) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_neg2'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_Expr_range_index3' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 2 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, [, Expr, :, >> (neg), Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg2'
engine/parser/rule.cpp:191: Rule::match(Expr_neg2) -- descendable 'Expr' found at 5
engine/parser/rule.cpp:203: Rule::match(Expr_neg2) -- actually descending 'Expr' found at 5 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 5
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 5
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_neg2' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 12
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, Expr, :, (neg), >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 5
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 5
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 5
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 12
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, Expr, :, >> (neg), Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg2'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_neg2) -- descendable 'Expr' found at 5
engine/parser/rule.cpp:224: Rule::match(Expr_neg2) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_neg2'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1006: Parser::applyPaths -- Need more tokens (same arity), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, [, Expr, :, >> (neg), Expr, ] 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_neg2'
engine/parser/rule.cpp:224: Rule::match(Expr_neg2) -- matched (mode incremental) at 6
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_neg2' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_neg2 -- state depth 1 -- state id 12
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d75e0 to 0x81d7630 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Expr_neg2 -- state depth 1 -- state id 12
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, [, Expr, :, Expr, ]
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3open) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3open) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index2) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index2'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_Expr_range_index2 -- state depth 1 -- state id 12
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7ab8 to 0x81d76b8 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7670 to 0x81d76b8 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 6 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_Expr_range_index2 -- state depth 1 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, String 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_String) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_String'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_String -- state depth 1 -- state id 12
engine/parser/parser.cpp:1158: Applied rule Atom_String -- state depth 1 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 12
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 12
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 12
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 12
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: (a[[1:(-1)]]) :)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d76b8 to 0x81d7e50 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7b30 to 0x81d7e50 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 12
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 12
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7e50 to 0x81d7e98 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7e98 to 0x81d7200 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 12
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d7e98 (((a[[1:(-1)]]) = "")) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "((a[[1:(-1)]]) = "")"
engine/psteps/exprindex.cpp:62: Apply lvalue "(a[[1:(-1)]])"
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprneg.cpp:42: Apply "(-1)"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d7e98 (((a[[1:(-1)]]) = "")) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 13
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 13
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 13
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 13
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 13
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8058 to 0x81d80e0 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d80e0 to 0x81d7fd0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 13
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d80e0 (a) data size: 1
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d80e0 (a) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a[1:a.len] = """
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 14
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 14
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [ 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_index' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 14
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 14
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 3), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, : 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_index' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 4), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Name 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_Expr_range_index3' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 14
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, Expr, :, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 14
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr, :, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 5), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Expr, . 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_Expr_range_index3' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:224: Rule::match(Expr_dot) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_dot'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, [, Expr, :, >> Expr, ., Name 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_dot'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_dot' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_dot'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_dot) -- matched (mode full) at 7
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_dot'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_dot -- state depth 1 -- state id 14
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7bd0 to 0x81d7c70 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_dot -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr, :, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 5), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Expr, ] 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_Expr_range_index3' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3open) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3open) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index2) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index2'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_Expr_range_index2 -- state depth 1 -- state id 14
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8120 to 0x81d8198 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7d08 to 0x81d8198 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 6 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_Expr_range_index2 -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, String 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_String) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_String'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_String -- state depth 1 -- state id 14
engine/parser/parser.cpp:1158: Applied rule Atom_String -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 14
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 14
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 14
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 14
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: (a[[1:(a.len)]]) :)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8198 to 0x81d85a0 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8208 to 0x81d85a0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 14
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 14
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d85a0 to 0x81d85e8 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 2 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d85e8 to 0x81d7788 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 14
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d85e8 (((a[[1:(a.len)]]) = "")) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "((a[[1:(a.len)]]) = "")"
engine/psteps/exprindex.cpp:62: Apply lvalue "(a[[1:(a.len)]])"
engine/psteps/exprdot.cpp:76: Apply "(a.len)"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d85e8 (((a[[1:(a.len)]]) = "")) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 15
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 15
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 15
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 15
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 15
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8760 to 0x81d8818 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8818 to 0x81d86d8 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 15
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d8818 (a) data size: 1
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d8818 (a) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a[1:2] = 30"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d5210
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 16
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 16
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [ 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_index' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 16
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 16
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 3), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, : 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_index' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 4), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_Expr_range_index3' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 16
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, Expr, :, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 16
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr, :, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 5), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Expr, ] 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_Expr_range_index3' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3open) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3open) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index2) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index2'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_Expr_range_index2 -- state depth 1 -- state id 16
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8858 to 0x81d8390 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8348 to 0x81d8390 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 6 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_Expr_range_index2 -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 16
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 16
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 16
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 16
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 16
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: (a[[1:2]]) :)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8390 to 0x81d8b50 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8430 to 0x81d8b50 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 16
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 16
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8b50 to 0x81d8b98 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8b98 to 0x81d7d88 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 16
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d5214
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 1
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d8b98 (((a[[1:2]]) = 30)) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "((a[[1:2]]) = 30)"
engine/psteps/exprindex.cpp:62: Apply lvalue "(a[[1:2]])"
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d5210
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: ""
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a[0:0] = 0x32"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d8858
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 17
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [ 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_index' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 17
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_index) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_index'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 4 > 3), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, : 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_index' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_index'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 4
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 4), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_Expr_range_index3' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 17
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, [, Expr, :, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr, [, Expr, :, Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index3) -- matched (mode full) at 5
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index3'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 8 > 5), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, [, Expr, :, Expr, ] 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_Expr_range_index3' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_Expr_range_index3'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_index) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_index) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3) -- actually descending 'Expr' found at 4 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 4
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 4
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index3open) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_Expr_range_index3open) -- actually descending 'Expr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_Expr_range_index2) -- descendable 'Expr' found at 4
engine/parser/rule.cpp:224: Rule::match(Expr_Expr_range_index2) -- matched (mode full) at 6
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_Expr_range_index2'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Expr_Expr_range_index2 -- state depth 1 -- state id 17
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d7d78 to 0x81d8478 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8430 to 0x81d8478 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 6 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_Expr_range_index2 -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, = 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 2), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, =, Int 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_assign) -- actually descending 'NeListExpr' found at 2 (adding stack)
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Atom_Int) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Int'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Expr_assign' match
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Int -- state depth 1 -- state id 17
engine/parser/parser.cpp:1158: Applied rule Atom_Int -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: Expr, =, >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'NeListExpr_first' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: Expr, =, >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 4
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'NeListExpr_first'
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:203: Rule::match(NeListExpr_first) -- actually descending 'Expr' found at 2
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 2
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 2
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on NeListExpr
engine/parser/rule.cpp:191: Rule::match(NeListExpr_first) -- descendable 'Expr' found at 2
engine/parser/rule.cpp:224: Rule::match(NeListExpr_first) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(NeListExpr) -- match 'NeListExpr_first'
engine/parser/parser.cpp:846: Parser::findPaths -- 'NeListExpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule NeListExpr_first -- state depth 1 -- state id 17
engine/parser/parser.cpp:490: Parser::simplify -- 1 tokens -> NeListExpr
engine/parser/parser.cpp:1158: Applied rule NeListExpr_first -- state depth 1 -- state id 17
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, =, NeListExpr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_assign) -- descendable 'NeListExpr' found at 2
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 3
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_assign -- state depth 1 -- state id 17
engine/sp/parsercontext.cpp:341: ParserContext::defineSymbols on (: (a[[0:0]]) :)
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8478 to 0x81d8bf0 (now (nil))
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d88d0 to 0x81d8bf0 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 3 tokens -> Expr
engine/parser/parser.cpp:1158: Applied rule Expr_assign -- state depth 1 -- state id 17
engine/parser/parser.cpp:1026: Parser::applyPaths -- Applied on small arity, stack: >> Expr, EOL
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 17
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8bf0 to 0x81d8cd0 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8cd0 to 0x81d5210 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 17
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d885c
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 3
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d8cd0 (((a[[0:0]]) = 50)) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/psteps/exprassign.cpp:69: Apply "((a[[0:0]]) = 50)"
engine/psteps/exprindex.cpp:62: Apply lvalue "(a[[0:0]])"
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d8cd0 (((a[[0:0]]) = 50)) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d8858
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: "a"
engine/parser/parser.cpp:145: Parser::pushState -- pushing state 'Main'
engine/parser/parser.cpp:103: Creating StateFrame at 0x81d8858
engine/parser/parser.cpp:520: Parser::step
engine/parser/parser.cpp:535: Parser::step -- on state "Main" --  
engine/parser/parser.cpp:686: Parser::parserLoop -- starting
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Name 
engine/parser/parser.cpp:758: Parser::onNewToken -- starting new path finding
engine/parser/state.cpp:64: State::findPaths -- enter Main
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Atom_Name) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Atom) -- match 'Atom_Name'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/state.cpp:79: State::findPaths -- nt-token Autoexpr match
engine/parser/parser.cpp:766: Parser::onNewToken -- path found in current state.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Atom_Name -- state depth 1 -- state id 18
engine/sp/parsercontext.cpp:261: ParserContext::addVariable a
engine/parser/parser.cpp:1158: Applied rule Atom_Name -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Atom
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_atom'
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_atom) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_atom'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1150: Applying rule Expr_atom -- state depth 1 -- state id 18
engine/parser/parser.cpp:1158: Applied rule Expr_atom -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: >> Expr
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Expr_assign) -- matched (mode full) at 1
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Expr) -- match 'Expr_assign'
engine/parser/parser.cpp:831: Parser::findPaths -- path 'Autoexpr' match
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:1076: Parser::applyPaths -- Need more tokens (larger arity 3 > 1), returning.
engine/parser/parser.cpp:744: Parser::parserLoop -- stack now: >> Expr, EOL 
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:850: Parser::findPaths -- Existing path 'Expr_assign' failed 
engine/parser/parser.cpp:781: Parser::onNewToken -- failed in incremental mode, exploring.
engine/parser/parser.cpp:1100: Parser::explorePaths -- starting full search mode.
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Expr_assign'
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Expr
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:846: Parser::findPaths -- 'Expr'->findPaths failure
engine/parser/parser.cpp:1108: Parser::explorePaths -- adding error frame 0(none); parser frames 2
engine/parser/parser.cpp:825: Parser::findPaths -- continuing on existing path 'Autoexpr'
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:203: Rule::match(Autoexpr) -- actually descending 'Expr' found at 0
engine/parser/rule.cpp:191: Rule::match(Expr_atom) -- descendable 'Atom' found at 0
engine/parser/rule.cpp:203: Rule::match(Expr_atom) -- actually descending 'Atom' found at 0
engine/parser/parser.cpp:840: Parser::findPaths -- existing path failed, trying with full on Autoexpr
engine/parser/rule.cpp:191: Rule::match(Autoexpr) -- descendable 'Expr' found at 0
engine/parser/rule.cpp:224: Rule::match(Autoexpr) -- matched (mode full) at 2
engine/parser/nonterminal.cpp:114: NonTerminal::findPaths(Autoexpr) -- match 'Autoexpr'
engine/parser/parser.cpp:846: Parser::findPaths -- 'Autoexpr'->findPaths success
engine/parser/parser.cpp:1130: Parser::explorePaths -- clearing errors.
engine/parser/parser.cpp:958: Parser::applyPaths -- begin
engine/parser/parser.cpp:1150: Applying rule Autoexpr -- state depth 1 -- state id 18
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8e20 to 0x81d8ed8 (now (nil))
engine/sp/parsercontext.cpp:528: ParserContext::addStatement type 'AutoExpr'
engine/sp/parsercontext.cpp:403: ParserContext::checkSymbols on 1 syms
engine/sp/parsercontext.cpp:477: ParserContext::findSymbol "a"
engine/sp/parsercontext.cpp:423: ParserContext::checkSymbols "a" is undefined, up-notifying
engine/sp/parsercontext.cpp:438: ParserContext::checkSymbols "a" is now of type 1
/home/gian/Progetti/FalconRepo/falcon/engine/treestep.cpp:62: Setting parent of 0x81d8ed8 to 0x81d8d98 (now (nil))
engine/parser/parser.cpp:490: Parser::simplify -- 2 tokens -> <nothing>
engine/parser/parser.cpp:1158: Applied rule Autoexpr -- state depth 1 -- state id 18
engine/parser/parser.cpp:1000: Parser::applyPaths -- Applied on same arity, stack: 
engine/parser/parser.cpp:1081: Parser::applyPaths -- Rule applied or added, looping again
engine/parser/parser.cpp:1093: Parser::applyPaths -- frames completelty exausted (Having worked)
engine/parser/parser.cpp:705: Parser::parserLoop -- done on interactive lexer token shortage
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr 0x81d885c
engine/parser/parser.cpp:292: Parser::isComplete? -- empty
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:227: Run called with depth 3
engine/psteps/stmtautoexpr.cpp:175: StmtAutoexpr apply interactive: 0x81d8ed8 (a) data size: 1
engine/psteps/stmtautoexpr.cpp:198: StmtAutoexpr end interactive: 0x81d8ed8 (a) data size: 1
/home/gian/Progetti/FalconRepo/falcon/engine/vm.cpp:270: Retnring on setReturn request
engine/parser/parser.cpp:108: Destroying StateFrame at 0x81d8858
engine/parser/parser.cpp:286: Parser::isComplete? -- ptr (nil)
/home/gian/Progetti/FalconRepo/falcon/clt/falcon/int_mode.cpp:69: GO -- Read: ""
