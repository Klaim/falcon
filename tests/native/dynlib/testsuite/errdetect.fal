/****************************************************************************
* DynLib - Falcon dynamic library loader module - test suite
*
* ID: 0e
* Category: smoke
* Subcategory:
* Short: Error detection
* Description:
*   Basic error detection.
* [/Description]
*
****************************************************************************/

load dynlib

try
   // setup
   l = DynLib( "./test_dynlib." + dynExt() )

   // check an unexisting function via query
   f = l.query( "void Yo()" )
   if f != nil: failure( "Found unexisting function" )

   // check an unexsting function via get
   try
      f = l.get( "void Yo()" )
      failure( "Error not raised by get on unexisting function" )
   catch DynLibError in e
   end

   // checks invalid return val
   try
      f = l.get( "asdr call_p0_ri()" )
      failure( "Invalid retval not detected" )
   catch ParseError in e
   end

   // checks invalid param
   try
      f = l.get( "int call_p0_ri( asdr name )" )
      failure( "Invalid param not detected" )
   catch ParseError in e
   end

      // checks invalid param
   try
      f = l.get( "int call_p0_ri( int )" )
      failure( "Invalid param not detected" )
   catch ParseError in e
   end


   // checks parameter after ...
   try
      f = l.get( "int call_p0_ri( void* data, ..., int next)" )
      failure( "Parameter after ... not detected" )
   catch ParseError in e
   end

   // type checks in other tests.

   success()
catch DynLibError in e
   failure( e.toString() )
end
