load timestamp
load shmem
load rnd

import session

// determine what we want to do.
mode = Request.getField( "mode", "" )

switch mode
   case "login"
      // a very simple auth scheme:
      if Request.getField( "user", "" ) == "master" and Request.getField( "pwd", "" ) == "1234"
         // notice: cookie names == to form field names
         sid = toString(random(1,10000000))
         sdata = Session(sid, Session.OM_FILE)         
         sdata.create(&session)
         session = [=>]
         session["user"] = "master"
         session["times"] = 0
         session["international"] = "国際記録物"
         session["started"] = TimeStamp().current()
         
         // All right.
         status = nil
      else
         status = "Login error"
      end

   case "logout"
      sid = Request.gets["my_sid"]
      sdata = Session(sid, Session.OM_FILE)         
      sdata.close()

   default
      // no mode? -- if we're logged in we must update the times counter.
      try
         if "my_sid" in Request.gets
            sid = Request.gets["my_sid"]
            sdata = Session(sid, Session.OM_FILE)      
            sdata.open(true)
         end
      catch WopiError in e
         // an error in reading the session means we're trying to cheat
         status = "Invalid or expired session ID: " + e.toString()
      end
end

return [session, mode, status, sdata]
