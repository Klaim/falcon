// Fields used by the forms in this site.

import from nest.srv.Form in ff
import from hash
import from nest.srv.Form.utils in util

function checkSix( value )
   if value.len() < 6
      return i"Must be at least 6 chars long"
   end
end

function checkEmpty( value )
   if not value
      return i"Can't be empty"
   end
end

function checkOne( value )
   if not value
      return i"Please, select one"
   end
end

function setPwd( field, forming )
   forming[field.field] = hash.md5( field.value )
end

function setInterests( field, forming )
   forming[field.field] = ",".merge(field.value)
end

function getInterests( dbr, field  )
   field.value = dbr.data[field.field].split(",")
end


// User ID
user_id = ff.TextField( "user_id", i"User id", .[ field|"user_id" size|15 maxlength|15 check|checkSix] )

// Password
password = ff.PasswordField( "pwd1", i"Password",  .[ field|"pwd_md5" setter|setPwd size|15 maxlength|15 check|checkSix] )

// Repeat password
rep_password = ff.PasswordField( "pwd2", i"Repeat password",  .[ size|15 maxlength|15 ] )

// Repeat password
role = util.DataDictionary(
      Nest.dm("form_db").entity("roles"),
      "role_id", "role_desc",
      "role", i"User role",  .[ field|"auth_type" ] )

first_name = ff.TextField( "first_name", i"First name",  .[ field|"first_name" size|15 maxlength|32 check|checkEmpty ] )

last_name =  ff.TextField( "last_name", i"Last name",  .[ field|"last_name" size|15 maxlength|32 check|checkEmpty] )

title = ff.Select( "title", i"Title",  .[
   ff.Option( "", "---" )
   ff.Option( "doc", i"Dr." )
   ff.Option( "mr", i"Mr." )
   ff.Option( "mr", i"Mrs." )
   ],
   .[ field|"title" check|checkOne ])

birthday = util.DateSelect( "birthday", i"Birthday", .[ field|"birthdate"] )

sex = ff.Radio( "sex", i"Gender",  .[
   ff.Option( "male", i"Male" )
   ff.Option( "female", i"Female" )
   ],
   .[ field|"sex"
      setter|{ f,v => v["sex"] = f.value == "male" ? "M" : "F" }
      getter|{ dbr, f => f.value = ( dbr.data["sex"] == "M" ? "male" : "female") }
      check|checkOne] )

interests = ff.CheckBox( "interests", i"Interest",  .[
   ff.Option( "sport", i"Sports" )
   ff.Option( "music", i"Music" )
   ff.Option( "book", i"Books" )
   ff.Option( "stamp", i"Stamps" )
   ],
   .[
      field|"interests"
      setter|setInterests
      getter|getInterests
    ])

profile = ff.TextArea( "profile", i"Profile", .[ field|"profile" rows|10, cols|60 check|checkEmpty] )
