import from nest.dbentity in dbe
import from hash

if vmSystemType() == "WIN"
   connectString = "sqlite3:db=C:\\temp\\notes.db"
else
   connectString = "sqlite3:db=/tmp/notes.db"
end

notes = dbe.DBEntity( "notes",
   .[
   "id INTEGER PRIMARY KEY AUTOINCREMENT"
   "title varchar(60)"
   "content blob"
   "inserted DATETIME default CURRENT_TIMESTAMP"
   ]
   )

notes.views["table"] = .[
   dbe.DBColumn( "inserted", i"Inserted on", "<td class='timestamp'>$(value)</td>" )
   dbe.DBColumn( "title", i"Title", {v=>"<td class='title'>" + htmlEscape(v) + "</td>"} )
   dbe.DBColumn( "content", i"Content",
      { v=>
            "<td class='content'>" +
            ( v.len() > 30 ? v[0:30] + " ... " : v) +
            "</td>"
      })
   ]

notes.views["detail"] = .[
   dbe.DBColumn( "inserted", i"Inserted on", i"</b>$(value)</b>" )
   dbe.DBColumn( "title", i"Title",  {v=> htmlEscape(v)} )
   dbe.DBColumn( "content", i"Content",
      { v=> htmlEscape(v).replace("\n", "<br/>\n") })
   ]

users = dbe.DBEntity( "users",
   .[
   "user_id char(15) PRIMARY KEY"
   "pwd_md5 varchar(30)"
   "auth_type char(10)"
   ]
   )
   
users.startup = function()
   return [
      ["user_id" => "admin", "pwd_md5" => hash.md5("admin"), "auth_type" => "admin"],
      ["user_id" => "staff", "pwd_md5" => hash.md5("staff"), "auth_type" => "staff"],
      ["user_id" => "user", "pwd_md5" => hash.md5("user"), "auth_type" => "user"]
   ]
end
