/***************************************************
* Module Name :
* Author      : Lucone
* Create date : 2011-07-07
* Edit by     : --        in date   : ....-..-..
* Module Description -------------------------------
*        <please insert a module description>
***************************************************/
/***************************************************
--Classes, Object and functions:
*	33	class Blog( instance ) from Service( instance )
*	48	>> --- DML related to secondary objects-------------------------------<<
*	49		function getTagList()
*	56	>> --- Miscellaneous--------------------------------------------------<<
*	60		function fetchDict( sqlCmd )
*	78		function fetchArray( sqlCmd )
*	96		function execute( sqlCmd )
*	110		function finalize()
*	124		function createStructure()
*	129	>> --- private methods------------------------------------------------<<
*	130		function _openConn()
***************************************************/

import Service from nest as Service
import ServiceVar from nest as ServiceVar
import NestError from nest as NestError
import from nest.bindings in b
import BlogItem 	from nest.dm.cust.BlogItem 	  as BlogItem
import BlogComment  from nest.dm.cust.BlogComment as BlogComment
import BlogSection  from nest.dm.cust.BlogSection as BlogSection
import DBUtilities	from nest.dm.cust.DBUtilities as DBUtilities

class Blog( instance ) from Service( instance )
	
	Item = nil
	Comment = nil
	Section = nil
	_dbuti  = nil
	
	init

		self._dbuti = DBUtilities()
		self.Item = BlogItem( self._dbuti )
		self.Comment = BlogComment( self._dbuti )
		self.Section = BlogSection( self._dbuti )		

	end

// Region: DML related to secondary objects
	function getTagList()

		return self._dbuti.fetchArray( "SELECT Tag, count(*) as numHits FROM tBlogTags GROUP BY Tag;" )

	end


	/*	To close the connection and free
		the resources used					*/
	function finalize()

		self.Item.finalize()
		self.Comment.finalize()
		self.Section.finalize()
		self._dbuti.finalize()

	end

end