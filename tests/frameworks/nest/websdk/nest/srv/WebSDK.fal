/*
<source name="WebSDK" language="falcon" begin="23-Aug-2010">
    <description>
        Searches for available functionality and shows its API.
    </description>
    <authors>
        <author>
            <name>Giuseppe</name>
            <surname>Greco</surname>
            <email>giuseppe.greco@agamura.com</email>
        </author>
    </authors>
    <copyright year="2010" holder="CKD, Inc.">
        All rights reserved.
    </copyright>
</source>
*/

import Service from nest as Service

class WebSDK(owner, instance) from Service(owner, instance)
    _path = nil
    _availableApiObjects = [ => ]
    
    function startup()
        self._path = Nest.config.site_srv_dir + "/" + self.className() + "/"
        direnum = Directory(self._path)

        while (file = direnum.read())
            if fileType(self._path + file) == FileStat.NORMAL
                apiObject = Path(file).file
                symDict = [apiObject => nil]
                include(self._path + file, nil, nil, symDict)
                self._availableApiObjects[apiObject] = symDict[apiObject]
            end
        end
    end

    function run()
        // empty
    end

    function render()
        self.Service.render()

        functionName = nil
        render = self._renderSummary

        try
            functionName = Request.getField("function")
            render = self._renderDetail
        catch in error
            // no function name was specified; use default rendering
        end

        return render(functionName)
    end

    function _renderSummary()
        rows = ""

        for apiObject in self.getAvailableApiObjects()
            docData = apiObject.docData()
            detail = Nest.pageLink('detail', ["function" => docData["name"]])
            rows += @'
                <tr>
                <td valign="top" align="left"><a href="$(detail)">$(docData["name"])</a></td>
                <td valign="top" align="left">$(docData["description"])</td>
                </tr>
                '
        end

        if rows.len() > 0; out = @'
            <table border="0" cellpadding="0" cellspacing="0">
            <tr>
            <th valign="top" align="left">Name</th>
            <th valign="top" align="left">Description</th>
            </tr>
            $(rows)
            </table>
            '
        end

        return out
    end

    function _renderDetail(functionName)
        docData = self.getApiObject(functionName).docData()

        out = @'
            <table border="0" cellpadding="0" cellspacing="0">
            <tr>
            <th valign="top" align="left">Name</th>
            <td valign="top" align="left">$(docData["name"])</td>
            </tr>
            <tr>
            <th valign="top" align="left">Description</th>
            <td valign="top" align="left">$(docData["description"])</td>
            </tr>
            <tr>
            <th valign="top" align="left">Parameters</th>
            '

        invokeParams = ["function" => docData["name"]]

        try
            hasParams = docData["parameters"]
            out += @'
                <td valign="top" align="left">
                <table border="0" cellpadding="0" cellspacing="0">
                '
            for param in docData["parameters"]
                invokeParams[param["name"]] = param["name"]
                out += @'
                    <tr>
                    <td class="subtitle" valign="top" align="left">Name</td>
                    <td class="subtitle" valign="top" align="left">Description</td>
                    <td class="subtitle" valign="top" align="left">Mandatory</td>
                    </tr>
                    <tr>
                    <td valign="top" align="left">$(param["name"])</td>
                    <td valign="top" align="left">$(param["description"])</td>
                    <td valign="top" align="left">$(param["mandatory"])</td>
                    </tr>
                    '
            end
            out += @'
                </table>
                </td>
                '
        catch in error
            out += @'<td valign="top" align="left">N/A</td>'
        end

        invoke = Nest.pageLink('invoke', invokeParams)

        out += @'
            </tr>
            <tr>
            <th valign="top" align="left">URL</th>
            <td valign="top" align="left"><a href="$(invoke)">$(invoke)</a></td>
            </tr>
            </table>
        '

        return out
    end

    function getAvailableApiObjects()
        return self._availableApiObjects.values()
    end

    function getApiObject(name)
        try
            return self._availableApiObjects[name]
        catch in error
            raise "Function '" + name + "' does not exist."
        end
    end

    function finalize()
        // empty
    end
end
