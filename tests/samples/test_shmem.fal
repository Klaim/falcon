/***********************************************
 Test for shared memory objects
 
 This test open a shared memory object called "test".
 Each client participating will increase a letter
 A-Z each half second; the first client will rotate
 the first letter, the second client the second letter
 and so on.
 
 If a client receives anyting on the command line,
 it will destroy the session memory object and
 start all over again (so, the "master" client should
 have a parameter on the command line).
***********************************************/

load shmem

mem = args.len == 0 ? SharedMem("test") : SharedMem.create("test")
data = mem.grab()
id = data.len
> "Press enter to terminate"
> "This will be client with ID ", id
data += "A"
mem.write(data)

sel = Selector()
// add the stream for read
sel.addRead( VMProcess.current().stdIn() )

count = 1

while not sel.wait(500)
   >> @"$({mem.size}:r4): >",data, "< \r"   
   mem.read(data)
   data[id] = "A"/count
   if ++count == 26
      count = 0
   end
   mem.write(data)
end

if args.len != 0
   mem.close(true)
end

> "Done"
