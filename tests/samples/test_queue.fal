
queue = SyncQueue()
done = Barrier()

function consumer( id, control )
   > "Entering the consumer ", id

   onSignaled = {queue =>
      control[id] = "Received " + queue.tryPop().describe()
      queue.release()
   }
   
   wl = Waiter( done )
   wl.add( queue, onSignaled )
   > wl
   wl.wait()
   
   > "Exiting consumer ", id
end


function controller( control )
   > "Entering the controller"
   
   // start all
   queue.push("Hello world!")
   count = 0
   now  = seconds()
   while seconds() - now < 5.0
      >> @"$({seconds()-now}.2) ${control[0]}, ${control[1]}, ${control[2]}              \r"
      rest(10)
      ++count
      queue.push("Hello again!", 1, seconds(), count )
   end 
   
   done.open()
   >
   > "Exiting the controller"
end

> "Starting"

ctrl = [0, 0, 0]
f0 = {=> consumer(0, ctrl) }
f1 = {=> consumer(1, ctrl) }
f2 = {=> consumer(2, ctrl) }
f3 = {=> controller(  ctrl) }

p = Parallel( f0, f1, f2, f3 )
p.launch()

> "Done"
