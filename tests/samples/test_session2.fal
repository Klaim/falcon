/***********************************************
 Test for session objects
 
 This test creates a session containing a counter and
 a timestamp variable.
 
 After the first time, the session is read and the variables
 are updated.
 
 The test is baked on a file called "test_session"
 because not all O/S have persistent shared memory.
 ***********************************************/

load shmem
load timestamp

control = nil

x = Session("test_session", Session.OM_SHMEM_BU)

try
   x.start(&control, &var0, &start, &lastAccess)
catch SessionError in e
   if e.code == SessionError.Expired
      > "Session expired; creating a new session."
      x.create(&control, &var0, &start, &lastAccess)
   end
end

if control == nil   
   var0 = 0
   control = true
   start = TimeStamp().current()
   lastAccess = start
   > "Initializing sesion at ", start
   x.timeout = 30
else
   > "Session started at: ", start
   > "Last accessed: ", lastAccess
   lastAccess = TimeStamp().current()
   > "Called ", ++var0, " times."
   > "Status: ", x.createdAt, " - ", x.expiresAt, " - ", x.timeout, "."
end

x.save()

> "Done."
