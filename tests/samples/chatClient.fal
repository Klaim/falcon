#!/usr/local/bin/falcon
/*
   FALCON - Samples

   FILE: chatClient.fal

   A simple client meant to connect to a chatServer.
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: 2006-05-11 12:35

   -------------------------------------------------------------------
   (C) Copyright 2004: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/

load socket

/********************************
  A simple utility
*********************************/
class ClientTCPSocket( address, port ) from TCPSocket( address, port )
   data = ""

   function _readline()
      readIn = ""
      self.recv( readIn, 1024 )
      return readIn
   end

   function readline()
      readIn = ""
      self.recv( readIn, 1024 )
      return readIn
   end
end

/********************************
  Main program
*********************************/

// Send a login to the server
if len( args ) != 3
   printl( "Usage: chatClient.fal <address> <port> <nickname>" )
   exit(1)
end

try
   socket = ClientTCPSocket()
   socket.setTimeout( 2000 )
   socket.connect( args[0], args[1] )
   // get Server hailing
   data = socket.readline()
   if data == nil: raise Error( 0, "Timeout in server response" )
   printl( "Server reply: ", data )
   printl( "Sending your nickname." )
   socket.send( "[IAM_]" + args[2] +"\r\n" )

   data = socket.readline()
   if data == nil: raise Error( 0, "Timeout in server response" )
   printl( "Server reply: ", data )
   if "accepted" notin data
      exit( 1 )
   end
catch in error
   printl( "Error in login sequence. ")
   printl( error.toString() )
   socket.dispose()
   exit( 0 )
end

printl( "Write something to send a message to all" )
printl( "Write nick: mesasge to senda a private message" )
printl( "Press ctrl + C to end" )

istream = stdIn()
print( "> " )
while true

   if istream.readAvailable(0)
      message = input()
      print( "> " )
      if ":" in message
         message = "[PRIV]" + message + "\r\n"
      else
         message = "[WALL]" + message + "\r\n"
      end

      try
         socket.send( message )
      catch in error
         printl( "Error while sending message: ", error.toString() )
      end
   elif socket.readAvailable(0)
      inline = socket.readline()
      if not inline
         printl( "Server died" )
         socket.dispose()
         exit(0)
      end
      printl( "\r", inline )
      print( "> " )
   else
      sleep( 0.01 )
   end
end


/* end of chatClient.fal */
