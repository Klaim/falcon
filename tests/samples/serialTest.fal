#!falcon
/*
   FALCON - Samples

   FILE: serialTest.fal

   $Id: serialTest.fal,v 1.2 2007/06/09 10:32:55 jonnymind Exp $

   Serializer and deserializer for file streams.
	Use parameter -o to write an output serialized file
   Use parameter -i to read a previously serialized file
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: mer nov 3 2004
   Last modified because:

   -------------------------------------------------------------------
   (C) Copyright 2004: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
   In order to use this file in its compiled form, this source or
   part of it you have to read, understand and accept the conditions
   that are stated in the LICENSE file that comes boundled with this
   package.
*/

object obj
	a = 1.3
	b = [ "c" => "d" ]
	function test()
		printl( "Test!!" )
	end
end

printl( "Falcon sample programs." )
printl( "Serialization sample." )
printl( "-------------------------" )

if len( args ) < 2
	printl( "specify '-i/-o <file>' on the command line" )
	return
end

if args[0] != "-o" and args[0] != "-i"
	printl( "Specify either -i or -o on the command line" )
	return
end


if args[0] == "-o"
	printl( "Writing to file ", args[1], "\n" )

	array = [ "Hello world",
		1,
		nil,
		1.3,
		[3:-1],
		[3:],
		[1, 2, 3],
		["a"=>1, "b"=>2, "c"=>3 ],
		obj,
		"last" ]

	try
		stream = OutputStream( args[1] )
		for elem in array
			serialize( stream, elem )
		end
		stream.close()
	catch in err
		printl( "Error while writing!" )
		printl( err.toString() )
	end
else
	printl( "Reading from file ", args[1], "\n" )
	try
		stream = InputStream( args[1] )
		count = 1
		while true
      	item = deserialize( stream )
      	if stream.eof()
      		break
			end
      	print( "Deserialized ", count, ": " )
      	inspect( item )
	      count ++
		end
		stream.close()
	catch in err
      if stream.eof()
         > "Stream hit EOF."
      else
   		printl( "Error while reading!" )
   		printl( err.toString() )
      end
	end
end

printl( "-------------------------" )
printl( "Test complete." )
