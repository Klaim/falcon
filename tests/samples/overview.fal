/*
 * NOTE: This is not yet functional, just an example of what
 *       we would like the the interface to act like.
 */

load dbi

dbh = DBIConnect( "pgsql:dbname=sample" )
> dbh.serverVersion      // 8.1.3
> dbh.ping()             // true/false

age = dbh.queryOne( "SELECT age FROM people WHERE id=1" )
> age, " ", typeOf( age ) == IntegerType
/* 12, 1 */

name = dbh.queryOne( "SELECT name FROM people WHERE id=1" )
> name, " ", typeOf( name ) == StringType
/* John, 1 */

person = dbh.queryOne( "SELECT * FROM people WHERE id=1" )
inspect( name )
/*
Dict[2]{
   "age" => int(12),
   "name" => "John"
}
*/

rset = dbh.query( "SELECT name, age FROM people" )
while ( let person = rset.fetchNext() )
   > person["name"], " ", person[0]
   > person["age"], " ", person[1]
end
rset.close()

dbh.execute( "UPDATE people SET age=13 WHERE id=1" )

t = dbh.startTransaction()
t.execute( "INSERT INTO people VALUES ('Jane', 14 )" )
t.execute( "UPDATE people SET sister=2 WHERE id=1" )
t.commit()  // --or-- t.rollback()

try
   dbh.query( "SELECT name FROM nonexistant_table" )
   > "Will never get here!"
catch DBIError in error
   > error
end
