/*
   FALCON - Samples

   FILE: eventMarshal.fal

   Test for event marshalling and data returning.
   -------------------------------------------------------------------
   Author: Giancarlo Niccolai
   Begin: Sun, 13 Apr 2008 23:26:44 +0200

   -------------------------------------------------------------------
   (C) Copyright 2004: the FALCON developers (see list in AUTHORS file)

   See LICENSE file for licensing details.
*/


attributes: listening

class Listener
   listening = [marshalCBX, "on'", false]

   function activate( on_or_off )
      if on_or_off
         give listening to self
      else
         give not listening to self
      end
   end

   has listening
end

function shout( event )
   if event.type() == ArrayType
      return broadcast( listening, event )
   else
      message = [event]
      for param in [1:paramCount()]: arrayAdd(message, paramNumber(param))
      return broadcast( listening, message )
   end
end

//================================================
// DataBay
//

class DataBay from Listener
   _data = nil

   function onSetData( data )
      self._data = data
      return true
   end

   function onGetData()
      return oob( self._data )
   end
end

//==================================================

> "=================== ***** ========================"
> "Falcon event marshalling test"
> "=================== ***** ========================"
>
> "This test verifies the event semantics for message marshalling"
> "The arguments you type on the command line will be repeated through an event;"
> "Then, another event will ask a storage item class to retreive the data."
if args.len() == 0
   >
   >"No arguments provided; please, write something on the command line."
   return 1
end

db = DataBay()
shout( "SetData", args )

>> "Arguments replied: "
for string in shout( "GetData" )
   >> string
   formiddle: >>", "
   forlast: >"."
end
>
> "Complete."

