/****************************************************************************
* Falcon test suite
*
* ID: 116c
* Category: rtl
* Subcategory: list
* Short: List memory
* Description:
*   We test the RTL List to correctly mark, save and dispose
*   items being stored in them.
*
* [/Description]
*
****************************************************************************/

class tester( initparam )
   name = initparam
end

/* Now forin creates an extra reference, will be fixed in 0.9 */
for i in [1 : 11]
end

// initialize references
GC.perform( true )
aliveMem = GC.aliveMem
items = GC.items
usedMem = GC.usedMem

// create a list
list = List()
// change gc mark
GC.perform( true )

for i in [1 : 11]
   list.push( tester( toString(i) ) )
end

// a recursive list
list.pushFront( list )

// a tester in a property
list.erase = tester( toString(1) )

// we have no reference of the original items, but they are stored deep in the list.
// so, if we destroy them, we'll crash here:
GC.perform( true )

for i in [ 10 : 1 ]
   elem = list.pop()
   if int( elem.name ) != i
      failure( "coherency of stored item " + toString(i) )
   end
end

// Now the items can be collected; verify that we clean the memory:
list = nil
elem = nil
// clear the A register
a = 2 * 1

// be sure to kill both marks
GC.perform( true )
GC.perform( true )

if aliveMem != GC.aliveMem: failure( "unmatching allocated memory" )
if usedMem != GC.usedMem: failure( "unmatching used memory" )
if items != GC.items: failure( "unmatching live items items" )

success()

/* End of file */
