/*
@name String methods - split
@category Core-string

@output
String methods - splittr
Test as a method:
"","",-1 =>[m""]
"",",",-1 =>[m""]
",",",",-1 =>[m""]
"one","",-1 =>[m"o", m"n", m"e"]
"one",",",-1 =>[m"one"]
"one,two",",",-1 =>[m"one", m"two"]
"one,,two",",",-1 =>[m"one", m"two"]
"one,,two,",",",-1 =>[m"one", m"two", m""]
",one,,two,",",",-1 =>[m"", m"one", m"two", m""]
"one,,two,three",",",-1 =>[m"one", m"two", m"three"]
"one,two,three",",",0 =>[]
"one,two,three",",",1 =>[m"one,two,three"]
"one,two,three",",",2 =>[m"one", m"two,three"]
"one,two,three",",",3 =>[m"one", m"two", m"three"]
"one,two,three",",",4 =>[m"one", m"two", m"three"]
Test as a static function:
"","",-1 =>[m""]
"",",",-1 =>[m""]
",",",",-1 =>[m""]
"one","",-1 =>[m"o", m"n", m"e"]
"one",",",-1 =>[m"one"]
"one,two",",",-1 =>[m"one", m"two"]
"one,,two",",",-1 =>[m"one", m"two"]
"one,,two,",",",-1 =>[m"one", m"two", m""]
",one,,two,",",",-1 =>[m"", m"one", m"two", m""]
"one,,two,three",",",-1 =>[m"one", m"two", m"three"]
"one,two,three",",",0 =>[]
"one,two,three",",",1 =>[m"one,two,three"]
"one,two,three",",",2 =>[m"one", m"two,three"]
"one,two,three",",",3 =>[m"one", m"two", m"three"]
"one,two,three",",",4 =>[m"one", m"two", m"three"]
Done
@endoutput
*/

> "String methods - splittr"

tests = .[ 
   .["" "", -1]
   .["" ",", -1]
   .["," ",", -1]
   .["one" "", -1]
   .["one" ",", -1]
   .["one,two" ",", -1]
   .["one,,two" ",", -1]
   .["one,,two," ",", -1]
   .[",one,,two," ",", -1]
   .["one,,two,three" ",", -1]
   .["one,two,three" "," 0]
   .["one,two,three" "," 1]
   .["one,two,three" "," 2]
   .["one,two,three" "," 3]
   .["one,two,three" "," 4]
]

function test( code, x )
   > @"\"${x[0]}\",\"${x[1]}\",${x[2]} =>", code(x).describe()
end

> "Test as a method:"
^[ tests ] .[test {(x) x[0].splittr(x[1],x[2]) }]

> "Test as a static function:"
^[ tests ] .[test {(x) String.splittr(x[0],x[1],x[2]) }]

> "Done"
