/****************************************************************************
* Falcon test suite
*
*
* ID: 33c
* Category: expression
* Subcategory: indirect
* Short: deep indirect
* Description:
* Test string-to-symbol indirect access, checking for recursive indirections.
* [/Description]
*
****************************************************************************/

item = [ "one", "two", "three" ]
object access
   prop = [ 0, 1, 2 ]
   prop1 = [ "one" => 1, "two" => 2, "three" => 3 ]
   function mth()
      return "method"
   end

   function mth1()
      return self.prop1["three"]
   end
end

if # "item[ access.prop[1] ]" != "two": failure( "Deep indirect 1" )
if # "access.prop1[ item[2] ]" != 3: failure( "Deep indirect 2" )

deeparr = [ [1, "one"], [2, "two"], [3, "three"] ]
if # "deeparr[ access.prop[1] ][1]" != "two": failure( "Deep indirect 3" )
if # "deeparr[ access.prop1[ item[1] ] ][0]" != 3: failure( "Deep indirect 4" )

// let's try with a method
if (#"access.mth")() != "method": failure( "Deep indirect on methods" )
if (#"access.mth1")() != 3: failure("Deep indirect on methods - self" )

success()

/* End of file */
