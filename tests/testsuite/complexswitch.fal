/****************************************************************************
* Falcon test suite
*
* CVS-Id: $Id: complexswitch.fal,v 1.1.1.1 2006/10/08 15:05:40 gian Exp $
*
* ID: 17e
* Category: switch
* Subcategory:
* Short: Complex switch
* Description:
*  Uses variable switch entries
* [/Description]
*
****************************************************************************/

glob1 = 0
glob2 = printl
glob3 = "hello"
glob4 = "world"

function call_sw( param )

   switch param
      case nil
         return 0
      case "one", 1 to 2, 5
         return 1
      case glob1
         return 2
      case glob2, glob3
         return 3
      case glob4, "two", 6, 10 to 12
         return 4

      default
         return 10
   end
end

if call_sw( nil ) != 0: failure("case 0")

if call_sw( 1 ) != 1: failure("case 1 / 1")
if call_sw( "one" ) != 1: failure("case 1 / 2")
if call_sw( 2 ) != 1: failure("case 1 / 3")
if call_sw( 5 ) != 1: failure("case 1 / 4")

if call_sw( glob1 ) != 2: failure( "case 2 / 1" )
if call_sw( 0 ) != 2: failure( "case 2 / 2" )
glob1 = "g1"
if call_sw( glob1 ) != 2: failure( "case 2 / 3" )
if call_sw( "g1" ) != 2: failure( "case 2 / 4" )


if call_sw( glob2 ) != 3: failure( "case 3 / 1" )
if call_sw( printl ) != 3: failure( "case 3 / 2" )
glob2 = "g2"
if call_sw( glob2 ) != 3: failure( "case 3 / 3" )
if call_sw( "g2" ) != 3: failure( "case 3 / 4" )

if call_sw( glob3 ) != 3: failure( "case 3 / 5" )
if call_sw( "hello" ) != 3: failure( "case 3 / 6" )
glob2 = "g3"
if call_sw( glob3 ) != 3: failure( "case 3 / 7" )
if call_sw( "g3" ) != 3: failure( "case 3 / 8" )

if call_sw( glob4 ) != 4: failure( "case 4 / 1" )
if call_sw( "world" ) != 4: failure( "case 4 / 2" )
if call_sw( "two" ) != 4: failure( "case 4 / 3" )
if call_sw( 6 ) != 4: failure( "case 4 / 4" )
if call_sw( 11 ) != 4: failure( "case 4 / 5" )

if call_sw( 16 ) != 10: failure( "default / 1" )
if call_sw( "none" ) != 10: failure( "default / 2" )
glob4 = "none"
if call_sw( "world" ) != 10: failure( "default / 3" )

success()

/* End of file */
