/*
@name Variable parameters via passvp
@category Functions

This test checks the passvp standard 
function to pass variable paramters 
to other calls.

Notice that passvp is declared in the core
module, it's not a built-in.

@output   
Variable parameters via passvp
Invoke without parameters
A:Nil
B:Nil
C:Nil
---------------------------------------------------
Invoke with one variable parameter
A:first
B:Nil
C:Nil
---------------------------------------------------
Invoke with five variable parameter
A:first
B:second
C:third
---------------------------------------------------
Invoke without parameters -- and 2 fixed
1-A: Nil
1-B: Nil
A:Nil
B:Nil
C:Nil
---------------------------------------------------
Invoke with one fixed parameter
1-A: first
1-B: Nil
A:Nil
B:Nil
C:Nil
---------------------------------------------------
Invoke with five variable parameters (two fixed)
1-A: first
1-B: second
A:third
B:fourth
C:fifth
---------------------------------------------------
Invoke without parameters -- and 4 fixed
2-A: Nil
3-B: Nil
4-C: Nil
5-D: Nil
A:Nil
B:Nil
C:Nil
---------------------------------------------------
Invoke with one fixed parameter
2-A: first
3-B: Nil
4-C: Nil
5-D: Nil
A:Nil
B:Nil
C:Nil
---------------------------------------------------
Invoke with four fixed parameters
2-A: first
3-B: second
4-C: third
5-D: fourth
A:Nil
B:Nil
C:Nil
---------------------------------------------------
Invoke with four fixed parameters and one variable
2-A: first
3-B: second
4-C: third
5-D: fourth
A:fifth
B:Nil
C:Nil
---------------------------------------------------
Invoke with four fixed parameters and four variable
2-A: first
3-B: second
4-C: third
5-D: fourth
A:fifth
B:sixth
C:seventh
Done
@endoutput
*/


> "Variable parameters via passvp"


function checkParams(a,b,c)
   > "A:", a
   > "B:", b
   > "C:", c
end 

// PASS EVERYTHING
function testZero()
   passvp( checkParams )
end

// Keep first and second parameters
function testOne(zero,one)
   > "1-A: ", zero
   > "1-B: ", one
   passvp( checkParams )
end

// Keep first to fourth parameters
function testTwo(zero,one, two, three)
   > "2-A: ", zero
   > "3-B: ", one
   > "4-C: ", two
   > "5-D: ", three
   passvp( checkParams )
end

> "Invoke without parameters"
testZero()
> "---------------------------------------------------"
> "Invoke with one variable parameter"
testZero("first")

> "---------------------------------------------------"
> "Invoke with five variable parameter"
testZero("first", "second", "third", "fourth", "fifth")

> "---------------------------------------------------"
> "Invoke without parameters -- and 2 fixed"
testOne()

> "---------------------------------------------------"
> "Invoke with one fixed parameter"
testOne("first")

> "---------------------------------------------------"
> "Invoke with five variable parameters (two fixed)"
testOne("first", "second", "third", "fourth", "fifth")


> "---------------------------------------------------"
> "Invoke without parameters -- and 4 fixed"
testTwo()

> "---------------------------------------------------"
> "Invoke with one fixed parameter"
testTwo("first")

> "---------------------------------------------------"
> "Invoke with four fixed parameters"
testTwo("first", "second", "third", "fourth")

> "---------------------------------------------------"
> "Invoke with four fixed parameters and one variable"
testTwo("first", "second", "third", "fourth", "fifth" )

> "---------------------------------------------------"
> "Invoke with four fixed parameters and four variable"
testTwo("first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eight" )

> "Done"
