/*
@name Regex "replace" method
@category Regex

@output
Testing RE.replace
R'a(.)c'.replace('abcabc', '-\0-'): "-abc--abc-"
R'a(.)c'.replace('abcabc', '-\1-'): "-b--b-"
R'a(.)c'.replace('aaaabc', '-\0-'): "aaa-abc-"
R'a(.)c'.replace('aaaabc', '-\1-'): "aaa-b-"
R'a(.)c'.replace('bbb', '-\0-'): Nil
R'a(.)c'.replace('bbb', '-\1-'): Nil
R'a(.)c'.replace('xxaccxaacx', '-\0-'): "xx-acc-x-aac-x"
R'a(.)c'.replace('xxaccxaacx', '-\1-'): "xx-c-x-a-x"
R'a(.)c'.replace('AAA', '-\0-'): Nil
R'a(.)c'.replace('AAA', '-\1-'): Nil
R'a(.)c'.replace('ABC', '-\0-'): "-ABC-"
R'a(.)c'.replace('ABC', '-\1-'): "-B-"
R'a(.)c'.replace('xxABCxxABC', '-\0-'): "xx-ABC-xx-ABC-"
R'a(.)c'.replace('xxABCxxABC', '-\1-'): "xx-B-xx-B-"
@endoutput
*/

> "Testing RE.replace"
regex = r'a(.)c'i

for expr in .[ "abcabc" "aaaabc" "bbb" "xxaccxaacx" "AAA" "ABC" "xxABCxxABC" ]
   > regex,".replace('",expr,"', '-\\0-'): ", regex.replace(expr, '-\0-').describe()
   > regex,".replace('",expr,"', '-\\1-'): ", regex.replace(expr, '-\1-').describe()
end
