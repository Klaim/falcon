/****************************************************************************
* Falcon test suite
*
* ID: --
* Category: reflexive
* Subcategory:
* Short: Basic reflexive compiler
* Description:
* Loaded by reflexcomp as a module
* getting some data.
* [/Description]
*
****************************************************************************/

// Some globals
global_var = nil
global_sym = nil


// The object that will be used by the loader
object obj
   initData = nil
   remote = nil

   init
      // this code must be executed at module loading
      self.initData = "Initialized"
   end

   function func( param )
      return "obj " + param.toString()
   end

   function callRemote( param )
      return self.remote( param )
   end

end

// The functions that will be called by the loader

function func( param )
   return "func " + param.toString()
end

function func_global( param )
   return "func_global " + global_var + " " + param
end

function func_global_sym( param )
   // global_sym is now a function. Call it.
   return global_sym( param )
end

function func_global_obj( param )
   // now the global item is an object
   return global_sym.func( param )
end

function func_global_class( param )
   // now global_sym should be a class. Instance it...
   instance = global_sym()

   // and call a method
   return instance.func( param )
end


//==================================
// main code -- must return "main"

marr = [ 'm', 'a', 'i', 'n' ]
ret = ""
for c in marr
   ret += c
end

return ret

/* End of file */
