/*
@name Fence with delay
@category Parallel

@long 100
@checkpoint STEP

@result OK
*/

load rnd

randomSeed(123122)
size = 10000
size100 = size/100

agents = 5
data = []
sems = []
for i = 1 to agents
   data += -1
   sems += Semaphore()
end

fence = Fence(agents)
barrier = Barrier()
count = 0

function process( id )
   waiter = Waiter( barrier )
   waiter.add( sems[id], {=>
      data[id] = count
      if random(0,0,0,1)
         rest( random(1,10) )
      end
      fence.signal()
   })
      
   waiter.wait()
end


function control()
   for i = 1 to size
      for j = 0 to agents-1
         sems[j].post()
      end
      
      if i % size100 == 0: > "STEP"      
      fence.wait()
      
      // check if pos is ok
      for elem in data
         if elem != count
            return "Coherence check failed at " + count
         end
      end
      
      ++count
      
   end   
   barrier.open()
end


> "Fence with delay"
pfunc = [Parallel, control]
for i = 0 to agents-1
   pfunc += [process, i]
end

> pfunc.describe()
p = pfunc()
p.launch()

return "OK"
