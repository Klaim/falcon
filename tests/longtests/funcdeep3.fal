/****************************************************************************
* Falcon direct benchmarks
*
* ID: 2j
* Category: calls
* Subcategory: deep
* Short: Benchmark on deep calls (10000)
* Description:
*    Performing repeated function calls and returns, lengthening the
*    vm stack. This test performs 100 deep calls.
* [/Description]
****************************************************************************/

const depth = 10000
loops = (13000000/depth) * timeFactor()
each = int(loops/10)

function deepCall( counter, a, b, c, d )
   if counter < depth
      deepCall( counter + 1 )
   end
end

// getting time
time = seconds()
for i in [ 0 : loops ]

   // perform the call
   deepCall( 0 )

   if i % each == 0
      alive( i/loops*100 )
   end
end
// taking end time
time = seconds() - time

// subtract alive time
timeAlive = seconds()
for i in [0 : loops]
   if i % each == 0
      alive( i/loops*100 )
   end
end
timeAlive = seconds() - timeAlive
time -= timeAlive

timings( time, loops * depth )

/* end of file */
