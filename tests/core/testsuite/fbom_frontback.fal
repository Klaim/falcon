/****************************************************************************
* Falcon test suite
*
*
* ID: 36c
* Category: fbom
* Subcategory:
* Short: FBOM front/back
* Description:
*   Tests for front/back items in series.
* [/Description]
*
****************************************************************************/

// Strings
str = "Hello"
if str.front() != "H": failure( "String front" )
if str.back() != "o": failure( "String back" )

// numeric version
if str.front(1, false, true) != ord("H"): failure( "String front numeric" )
if str.back(1, false, true) != ord("o"): failure( "String back numeric" )

// removal
count = 0
cfrvector = ["H","e","l","l","o"]
while str
   if str.front(1,true) != cfrvector[count++]: failure( "String removal" )
end

// Arrays
array = [ 1, 2, 3, 4 ]
cfrvector = array.clone()

if array.front() != 1: failure( "Array front" )
if array.back() != 4: failure( "Array back" )

// removal
count = 0
while array
   if array.front(true) != cfrvector[count++]: failure( "Array removal" )
end

// Dictionaries
dict = [ "A"=>1, "B"=>2, "C"=>3]
if dict.front() != 1: failure( "Dict front" )
if dict.back() != 3: failure( "Dict back" )

// test with keys
if dict.front(false, true) != "A": failure( "Dict key front" )
if dict.back(false, true) != "C": failure( "Dict key back" )

// removal
count = 0
cfrvector = [1,2,3]
while dict
   if dict.front(true) != cfrvector[count++]: failure( "Dict removal" )
end

// Membuf
mb = MemBuf(5)
mb[0] = 1
mb[-1] = 2
if mb.front() != 1: failure( "Membuf front" )
if mb.back() != 2: failure( "Membuf back" )

// error
/*
try
   err = ""
   k = err.front()
   failure( "Error on empty string not raised" )
catch AccessError
end
*/
success()

/* End of file */
