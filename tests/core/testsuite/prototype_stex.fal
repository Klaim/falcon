/****************************************************************************
* Falcon test suite
*
* ID: 26e
* Category: prototype
* Subcategory: dict
* Short: Prototype indirect
* Description:
*  Checking OOP indirect operations on dictionary based prototyped objects.
*
*  In 0.8.x version, VM has a special code used to complie string expansion
*  and indirect operators which mimics the full compiler, but is much more
*  compact and faster. However, this duplicates code, at least in
*  functionalities, and that must be tested separately for arrays and
*  dictionary bindings.
* [/Description]
*
****************************************************************************/

// Smoke test: compilation
v = bless( [
   "prop" => 0,
   "add" => function( val ); self.prop += val; end,
   "sub" => function( val );
      self["prop"] -= val;
   end,
   1 => 0 ])

// copy
try
   s = @"$v.prop"
   if s != "0"
      failure( "Stex value" )
   end
catch
   failure( "Stex compilation" )
end

try
   s =  #"v.prop"
   if s != 0
      failure( "INDI value" )
   end
catch
   failure( "INDI compilation" )
end

mth = #"v.add"

try
   mth(2)
   if v.prop != 2
      failure( "INDI call" )
   end
catch in e
   failure( "INDI exception on call" )
end

success()
/* End of file */
